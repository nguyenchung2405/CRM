"use strict";
(self["webpackChunkprofile"] = self["webpackChunkprofile"] || []).push([["src_App_js"],{

/***/ "./src/App.js":
/*!********************!*\
  !*** ./src/App.js ***!
  \********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _App_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./App.css */ "./src/App.css");
/* harmony import */ var _redux_configStore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./redux/configStore */ "./src/redux/configStore.js");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "webpack/sharing/consume/default/react-redux/react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-router-dom */ "webpack/sharing/consume/default/react-router-dom/react-router-dom");
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_router_dom__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _components_sidebar_Sidebar__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/sidebar/Sidebar */ "./src/components/sidebar/Sidebar.js");
/* harmony import */ var _components_header_Header__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components/header/Header */ "./src/components/header/Header.js");
/* harmony import */ var _components_customer_CustomerTable__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./components/customer/CustomerTable */ "./src/components/customer/CustomerTable.js");
/* harmony import */ var _components_contract_ContractTable__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./components/contract/ContractTable */ "./src/components/contract/ContractTable.js");
/* harmony import */ var _components_contract_CreateContract__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./components/contract/CreateContract */ "./src/components/contract/CreateContract.js");
/* harmony import */ var _untils_helper__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./untils/helper */ "./src/untils/helper.js");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");















function App() {
  var renderMF = function renderMF() {
    if ((0,_untils_helper__WEBPACK_IMPORTED_MODULE_10__.checkMicroFe)() === false) {
      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(react_redux__WEBPACK_IMPORTED_MODULE_3__.Provider, {
        store: _redux_configStore__WEBPACK_IMPORTED_MODULE_2__.store,
        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(react_router_dom__WEBPACK_IMPORTED_MODULE_4__.BrowserRouter, {
          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsxs)("div", {
            className: "App",
            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_components_sidebar_Sidebar__WEBPACK_IMPORTED_MODULE_5__["default"], {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_components_header_Header__WEBPACK_IMPORTED_MODULE_6__["default"], {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsxs)(react_router_dom__WEBPACK_IMPORTED_MODULE_4__.Routes, {
              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(react_router_dom__WEBPACK_IMPORTED_MODULE_4__.Route, {
                path: "/crm/customer",
                element: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_components_customer_CustomerTable__WEBPACK_IMPORTED_MODULE_7__["default"], {})
              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(react_router_dom__WEBPACK_IMPORTED_MODULE_4__.Route, {
                path: "/crm/contract",
                element: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_components_contract_ContractTable__WEBPACK_IMPORTED_MODULE_8__["default"], {})
              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(react_router_dom__WEBPACK_IMPORTED_MODULE_4__.Route, {
                path: "/crm/contract/create",
                element: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_components_contract_CreateContract__WEBPACK_IMPORTED_MODULE_9__["default"], {})
              })]
            })]
          })
        })
      });
    } else {
      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(react_redux__WEBPACK_IMPORTED_MODULE_3__.Provider, {
        store: _redux_configStore__WEBPACK_IMPORTED_MODULE_2__.store,
        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)("div", {
          className: "mf-contract",
          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsxs)(react_router_dom__WEBPACK_IMPORTED_MODULE_4__.Routes, {
            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(react_router_dom__WEBPACK_IMPORTED_MODULE_4__.Route, {
              path: "/crm/customer",
              element: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_components_customer_CustomerTable__WEBPACK_IMPORTED_MODULE_7__["default"], {})
            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(react_router_dom__WEBPACK_IMPORTED_MODULE_4__.Route, {
              path: "/crm/contract",
              element: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_components_contract_ContractTable__WEBPACK_IMPORTED_MODULE_8__["default"], {})
            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(react_router_dom__WEBPACK_IMPORTED_MODULE_4__.Route, {
              path: "/crm/contract/create",
              element: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(_components_contract_CreateContract__WEBPACK_IMPORTED_MODULE_9__["default"], {})
            })]
          })
        })
      });
    }
  };
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_11__.Fragment, {
    children: renderMF()
  });
}
/* harmony default export */ __webpack_exports__["default"] = (App);

/***/ }),

/***/ "./src/components/Loading.js":
/*!***********************************!*\
  !*** ./src/components/Loading.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ Loading; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! antd */ "webpack/sharing/consume/default/antd/antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");




function Loading() {
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(antd__WEBPACK_IMPORTED_MODULE_1__.Spin, {
    className: "loading",
    indicator: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      xmlnsXlink: "http://www.w3.org/1999/xlink",
      style: {
        margin: "auto",
        display: "block"
      },
      width: "200px",
      height: "200px",
      viewBox: "0 0 100 100",
      preserveAspectRatio: "xMidYMid",
      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("defs", {
        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("clipPath", {
          id: "ldio-dqaepuzqq5v-cp",
          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("rect", {
            x: "0",
            y: "0",
            width: "100",
            height: "50",
            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("animate", {
              attributeName: "y",
              repeatCount: "indefinite",
              dur: "2.2222222222222223s",
              calcMode: "spline",
              values: "0;50;0;0;0",
              keyTimes: "0;0.4;0.5;0.9;1",
              keySplines: "0.3 0 1 0.7;0.3 0 1 0.7;0.3 0 1 0.7;0.3 0 1 0.7"
            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("animate", {
              attributeName: "height",
              repeatCount: "indefinite",
              dur: "2.2222222222222223s",
              calcMode: "spline",
              values: "50;0;0;50;50",
              keyTimes: "0;0.4;0.5;0.9;1",
              keySplines: "0.3 0 1 0.7;0.3 0 1 0.7;0.3 0 1 0.7;0.3 0 1 0.7"
            })]
          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("rect", {
            x: "0",
            y: "50",
            width: "100",
            height: "50",
            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("animate", {
              attributeName: "y",
              repeatCount: "indefinite",
              dur: "2.2222222222222223s",
              calcMode: "spline",
              values: "100;50;50;50;50",
              keyTimes: "0;0.4;0.5;0.9;1",
              keySplines: "0.3 0 1 0.7;0.3 0 1 0.7;0.3 0 1 0.7;0.3 0 1 0.7"
            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("animate", {
              attributeName: "height",
              repeatCount: "indefinite",
              dur: "2.2222222222222223s",
              calcMode: "spline",
              values: "0;50;50;0;0",
              keyTimes: "0;0.4;0.5;0.9;1",
              keySplines: "0.3 0 1 0.7;0.3 0 1 0.7;0.3 0 1 0.7;0.3 0 1 0.7"
            })]
          })]
        })
      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("g", {
        transform: "translate(50 50)",
        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("g", {
          transform: "scale(0.9)",
          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("g", {
            transform: "translate(-50 -50)",
            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("g", {
              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("animateTransform", {
                attributeName: "transform",
                type: "rotate",
                dur: "2.2222222222222223s",
                repeatCount: "indefinite",
                values: "0 50 50;0 50 50;180 50 50;180 50 50;360 50 50",
                keyTimes: "0;0.4;0.5;0.9;1"
              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("path", {
                "clip-path": "url(#ldio-dqaepuzqq5v-cp)",
                fill: "#46dff0",
                d: "M54.864 50L54.864 50c0-1.291 0.689-2.412 1.671-2.729c9.624-3.107 17.154-12.911 19.347-25.296 c0.681-3.844-1.698-7.475-4.791-7.475H28.908c-3.093 0-5.472 3.631-4.791 7.475c2.194 12.385 9.723 22.189 19.347 25.296 c0.982 0.317 1.671 1.438 1.671 2.729v0c0 1.291-0.689 2.412-1.671 2.729C33.84 55.836 26.311 65.64 24.117 78.025 c-0.681 3.844 1.698 7.475 4.791 7.475h42.184c3.093 0 5.472-3.631 4.791-7.475C73.689 65.64 66.16 55.836 56.536 52.729 C55.553 52.412 54.864 51.291 54.864 50z"
              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("path", {
                fill: "#fe718d",
                d: "M81 81.5h-2.724l0.091-0.578c0.178-1.122 0.17-2.243-0.022-3.333C76.013 64.42 68.103 54.033 57.703 50.483l-0.339-0.116 v-0.715l0.339-0.135c10.399-3.552 18.31-13.938 20.642-27.107c0.192-1.089 0.2-2.211 0.022-3.333L78.276 18.5H81 c2.481 0 4.5-2.019 4.5-4.5S83.481 9.5 81 9.5H19c-2.481 0-4.5 2.019-4.5 4.5s2.019 4.5 4.5 4.5h2.724l-0.092 0.578 c-0.178 1.122-0.17 2.243 0.023 3.333c2.333 13.168 10.242 23.555 20.642 27.107l0.338 0.116v0.715l-0.338 0.135 c-10.4 3.551-18.31 13.938-20.642 27.106c-0.193 1.09-0.201 2.211-0.023 3.333l0.092 0.578H19c-2.481 0-4.5 2.019-4.5 4.5 s2.019 4.5 4.5 4.5h62c2.481 0 4.5-2.019 4.5-4.5S83.481 81.5 81 81.5z M73.14 81.191L73.012 81.5H26.988l-0.128-0.309 c-0.244-0.588-0.491-1.538-0.28-2.729c2.014-11.375 8.944-20.542 17.654-23.354c2.035-0.658 3.402-2.711 3.402-5.108 c0-2.398-1.368-4.451-3.403-5.108c-8.71-2.812-15.639-11.979-17.653-23.353c-0.211-1.191 0.036-2.143 0.281-2.731l0.128-0.308 h46.024l0.128 0.308c0.244 0.589 0.492 1.541 0.281 2.731c-2.015 11.375-8.944 20.541-17.654 23.353 c-2.035 0.658-3.402 2.71-3.402 5.108c0 2.397 1.368 4.45 3.403 5.108c8.71 2.812 15.64 11.979 17.653 23.354 C73.632 79.651 73.384 80.604 73.14 81.191z"
              })]
            })
          })
        })
      })]
    })
  });
}

/***/ }),

/***/ "./src/components/contract/ContractTable.js":
/*!**************************************************!*\
  !*** ./src/components/contract/ContractTable.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ ContractTable; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! antd */ "webpack/sharing/consume/default/antd/antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_icons_fc__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react-icons/fc */ "./node_modules/react-icons/fc/index.esm.js");
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-router-dom */ "webpack/sharing/consume/default/react-router-dom/react-router-dom");
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_router_dom__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "webpack/sharing/consume/default/react-redux/react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _title_title__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../title/title */ "./src/title/title.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! moment */ "webpack/sharing/consume/default/moment/moment");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _untils_helper__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../untils/helper */ "./src/untils/helper.js");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }










function ContractTable() {
  console.log("hop dong");
  var Column = antd__WEBPACK_IMPORTED_MODULE_1__.Table.Column;
  var navigate = (0,react_router_dom__WEBPACK_IMPORTED_MODULE_2__.useNavigate)();
  var dispatch = (0,react_redux__WEBPACK_IMPORTED_MODULE_3__.useDispatch)();
  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(1),
    _useState2 = _slicedToArray(_useState, 2),
    page = _useState2[0],
    setPage = _useState2[1];
  var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(10),
    _useState4 = _slicedToArray(_useState3, 2),
    pageNumber = _useState4[0],
    setPageNumber = _useState4[1];
  var _useSelector = (0,react_redux__WEBPACK_IMPORTED_MODULE_3__.useSelector)(function (state) {
      return state.contractReducer;
    }),
    total = _useSelector.total,
    contractList = _useSelector.contractList;
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
    dispatch({
      type: _title_title__WEBPACK_IMPORTED_MODULE_4__.GET_CONTRACT_LIST,
      data: {
        page: page,
        pageNumber: pageNumber
      }
    });
  }, [page, pageNumber, dispatch]);
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div", {
    className: "content contract__table customer__table",
    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div", {
      className: "table__features",
      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div", {
        className: "table__features__add",
        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("h1", {
          children: "Qu\u1EA3n l\xFD h\u1EE3p \u0111\u1ED3ng"
        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(react_icons_fc__WEBPACK_IMPORTED_MODULE_8__.FcPlus, {
          onClick: function onClick() {
            navigate("/crm/contract/create");
          }
        })]
      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div", {
        className: "table__features__search",
        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("input", {
          placeholder: "S\u1ED1 h\u1EE3p \u0111\u1ED3ng",
          type: "text"
        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("input", {
          placeholder: "T\xEAn kh\xE1ch h\xE0ng",
          type: "text"
        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("input", {
          placeholder: "Ng\u01B0\u1EDDi ph\u1EE5 tr\xE1ch",
          type: "text"
        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("div", {
          className: "table__features__search__btn",
          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("button", {
            children: "T\xECm ki\u1EBFm"
          })
        })]
      })]
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)(antd__WEBPACK_IMPORTED_MODULE_1__.Table, {
      dataSource: contractList,
      pagination: {
        position: ["bottomLeft"],
        defaultPageSize: 10,
        locale: {
          items_per_page: ""
        },
        defaultCurrent: 1,
        showSizeChanger: true,
        total: total,
        pageSizeOptions: [10, 50, 100],
        onChange: function onChange(page, pageNumber) {
          setPageNumber(pageNumber);
          setPage(page);
        },
        showTotal: function showTotal(total) {
          if (pageNumber * page < total) {
            return "Hi\u1EC3n th\u1ECB ".concat(pageNumber * page, " trong ").concat(total);
          }
          return "Hi\u1EC3n th\u1ECB ".concat(total, " trong ").concat(total);
        }
      },
      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(Column, {
        className: "contract__table__soHopDong",
        title: "S\u1ED1 h\u1EE3p \u0111\u1ED3ng",
        dataIndex: "soHopDong"
      }, "soHopDong"), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(Column, {
        className: "contract__table__customerName",
        title: "T\xEAn kh\xE1ch h\xE0ng",
        dataIndex: "customerName"
      }, "customerName"), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(Column, {
        className: "contract__table__nguoiPhuTrach",
        title: "Ng\u01B0\u1EDDi ph\u1EE5 tr\xE1ch",
        dataIndex: "nguoiPhuTrach"
      }, "nguoiPhuTrach"), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(Column, {
        className: "contract__table__time",
        title: "Th\u1EDDi gian th\u1EF1c hi\u1EC7n",
        dataIndex: "time"
      }, "time"), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(Column, {
        className: "contract__table__status",
        title: "Tr\u1EA1ng th\xE1i",
        render: function render(text) {
          var _text$status;
          return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("span", {
            status: text === null || text === void 0 ? void 0 : (_text$status = text.status) === null || _text$status === void 0 ? void 0 : _text$status.toLowerCase(),
            children: text === null || text === void 0 ? void 0 : text.status
          });
        }
      }, "status"), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(Column, {
        className: "contract__table__createdBy",
        title: "Ng\u01B0\u1EDDi t\u1EA1o H\u0110",
        dataIndex: "createdBy"
      }, "createdBy"), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(Column, {
        className: "contract__table__thaotac",
        render: function render(text) {
          return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("div", {
            className: "table__thaotac",
            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("button", {
              children: "Ch\u1EC9nh s\u1EEDa"
            })
          });
        }
      })]
    })]
  });
}

/***/ }),

/***/ "./src/components/contract/CreateContract.js":
/*!***************************************************!*\
  !*** ./src/components/contract/CreateContract.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ CreateContract; }
/* harmony export */ });
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "webpack/sharing/consume/default/antd/antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! moment */ "webpack/sharing/consume/default/moment/moment");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "webpack/sharing/consume/default/react-redux/react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _title_title__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../title/title */ "./src/title/title.js");
/* harmony import */ var _modal_contract_Term__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../modal/contract/Term */ "./src/components/modal/contract/Term.js");
/* harmony import */ var jwt_decode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! jwt-decode */ "../node_modules/jwt-decode/build/jwt-decode.esm.js");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }









function CreateContract() {
  var Column = antd__WEBPACK_IMPORTED_MODULE_0__.Table.Column;
  var Option = antd__WEBPACK_IMPORTED_MODULE_0__.Select.Option;
  var RangePicker = antd__WEBPACK_IMPORTED_MODULE_0__.DatePicker.RangePicker;
  var dispatch = (0,react_redux__WEBPACK_IMPORTED_MODULE_3__.useDispatch)();
  var _useSelector = (0,react_redux__WEBPACK_IMPORTED_MODULE_3__.useSelector)(function (state) {
      return state.customerReducer;
    }),
    customerList = _useSelector.customerList;
  var _useSelector2 = (0,react_redux__WEBPACK_IMPORTED_MODULE_3__.useSelector)(function (state) {
      return state.contractReducer;
    }),
    contractTypeList = _useSelector2.contractTypeList;
  var _useSelector3 = (0,react_redux__WEBPACK_IMPORTED_MODULE_3__.useSelector)(function (state) {
      return state.productReducer;
    }),
    productList = _useSelector3.productList;
  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false),
    _useState2 = _slicedToArray(_useState, 2),
    isShowModal = _useState2[0],
    setIsShowModal = _useState2[1];
  var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)([]),
    _useState4 = _slicedToArray(_useState3, 2),
    dataTable = _useState4[0],
    setDataTable = _useState4[1];
  var _useState5 = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)({}),
    _useState6 = _slicedToArray(_useState5, 2),
    valueForm = _useState6[0],
    setValueForm = _useState6[1];
  var _useState7 = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)([]),
    _useState8 = _slicedToArray(_useState7, 2),
    dotThanhToan = _useState8[0],
    setDotThanhToan = _useState8[1];
  (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(function () {
    dispatch({
      type: _title_title__WEBPACK_IMPORTED_MODULE_4__.GET_CUSTOMER_LIST
    });
    dispatch({
      type: _title_title__WEBPACK_IMPORTED_MODULE_4__.GET_PRODUCT_LIST
    });
    dispatch({
      type: _title_title__WEBPACK_IMPORTED_MODULE_4__.GET_CONTRACT_TYPE_LIST
    });
  }, []);
  var renderOption = function renderOption() {
    return customerList === null || customerList === void 0 ? void 0 : customerList.map(function (customer, index) {
      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(Option, {
        children: customer.name
      }, customer.id);
    });
  };
  var handleChangeValue = function handleChangeValue(name, value) {
    if (name !== "" && name.length > 0) {
      setValueForm(_objectSpread(_objectSpread({}, valueForm), {}, _defineProperty({}, name, value)));
    }
  };
  var renderLoaiHopDong = function renderLoaiHopDong() {
    return contractTypeList === null || contractTypeList === void 0 ? void 0 : contractTypeList.map(function (item) {
      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(Option, {
        value: item.id,
        children: item.name
      });
    });
  };
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("div", {
    className: "create__contract content",
    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div", {
      className: "create__contract__content",
      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("div", {
        className: "create__contract__header border_bottom_3px",
        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("h2", {
          children: "T\u1EA1o h\u1EE3p \u0111\u1ED3ng"
        })
      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div", {
        className: "create__contract__inforCustomer border_bottom_3px",
        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("p", {
          children: "Th\xF4ng tin kh\xE1ch h\xE0ng"
        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div", {
          className: "field__input field__flex",
          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div", {
            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(antd__WEBPACK_IMPORTED_MODULE_0__.Select, {
              className: "style",
              showSearch: true,
              showArrow: false,
              placeholder: "T\xEAn kh\xE1ch h\xE0ng",
              filterOption: function filterOption(input, option) {
                var _option$children;
                return ((_option$children = option === null || option === void 0 ? void 0 : option.children) !== null && _option$children !== void 0 ? _option$children : "").toLowerCase().includes(input.toLowerCase());
              },
              onChange: function onChange(value) {
                handleChangeValue("client_ID", +value);
              },
              children: renderOption()
            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("svg", {
              width: "22",
              height: "22",
              viewBox: "0 0 22 22",
              fill: "none",
              xmlns: "http://www.w3.org/2000/svg",
              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("path", {
                d: "M11 7.32739V14.6537",
                stroke: "#35794A",
                strokeWidth: "1.5",
                strokeLinecap: "round",
                strokeLinejoin: "round"
              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("path", {
                d: "M14.6667 10.9904H7.33337",
                stroke: "#35794A",
                strokeWidth: "1.5",
                strokeLinecap: "round",
                strokeLinejoin: "round"
              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("path", {
                fillRule: "evenodd",
                clipRule: "evenodd",
                d: "M15.6857 1H6.31429C3.04762 1 1 3.31208 1 6.58516V15.4148C1 18.6879 3.0381 21 6.31429 21H15.6857C18.9619 21 21 18.6879 21 15.4148V6.58516C21 3.31208 18.9619 1 15.6857 1Z",
                stroke: "#35794A",
                strokeWidth: "1.5",
                strokeLinecap: "round",
                strokeLinejoin: "round"
              })]
            })]
          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("input", {
            className: "style",
            placeholder: "Ng\u01B0\u1EDDi ph\u1EE5 tr\xE1ch",
            type: "text",
            name: "owner",
            onChange: function onChange(e) {
              var _e$target = e.target,
                value = _e$target.value,
                name = _e$target.name;
              handleChangeValue(name, value);
            }
          })]
        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div", {
          className: "field__input field__flex",
          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("input", {
            className: "style margin_right_54",
            placeholder: "S\u1ED1 h\u1EE3p \u0111\u1ED3ng",
            type: "text",
            name: "contract_number",
            onChange: function onChange(e) {
              var _e$target2 = e.target,
                value = _e$target2.value,
                name = _e$target2.name;
              handleChangeValue(name, +value);
            }
          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(RangePicker, {
            className: "date__range__picker",
            format: "DD-MM-YYYY",
            placeholder: ["Ngày bắt đầu", "Ngày kết thúc"],
            suffixIcon: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("svg", {
              width: "14",
              height: "16",
              viewBox: "0 0 14 16",
              fill: "none",
              xmlns: "http://www.w3.org/2000/svg",
              children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("path", {
                d: "M4.625 9H3.375C3.125 9 3 8.875 3 8.625V7.375C3 7.125 3.125 7 3.375 7H4.625C4.875 7 5 7.125 5 7.375V8.625C5 8.875 4.875 9 4.625 9ZM8 8.625C8 8.875 7.875 9 7.625 9H6.375C6.125 9 6 8.875 6 8.625V7.375C6 7.125 6.125 7 6.375 7H7.625C7.875 7 8 7.125 8 7.375V8.625ZM11 8.625C11 8.875 10.875 9 10.625 9H9.375C9.125 9 9 8.875 9 8.625V7.375C9 7.125 9.125 7 9.375 7H10.625C10.875 7 11 7.125 11 7.375V8.625ZM8 11.625C8 11.875 7.875 12 7.625 12H6.375C6.125 12 6 11.875 6 11.625V10.375C6 10.125 6.125 10 6.375 10H7.625C7.875 10 8 10.125 8 10.375V11.625ZM5 11.625C5 11.875 4.875 12 4.625 12H3.375C3.125 12 3 11.875 3 11.625V10.375C3 10.125 3.125 10 3.375 10H4.625C4.875 10 5 10.125 5 10.375V11.625ZM11 11.625C11 11.875 10.875 12 10.625 12H9.375C9.125 12 9 11.875 9 11.625V10.375C9 10.125 9.125 10 9.375 10H10.625C10.875 10 11 10.125 11 10.375V11.625ZM14 3.5V14.5C14 14.9167 13.8542 15.2708 13.5625 15.5625C13.2708 15.8542 12.9167 16 12.5 16H1.5C1.08333 16 0.729167 15.8542 0.4375 15.5625C0.145833 15.2708 0 14.9167 0 14.5V3.5C0 3.08333 0.145833 2.72917 0.4375 2.4375C0.729167 2.14583 1.08333 2 1.5 2H3V0.375C3 0.125 3.125 0 3.375 0H4.625C4.875 0 5 0.125 5 0.375V2H9V0.375C9 0.125 9.125 0 9.375 0H10.625C10.875 0 11 0.125 11 0.375V2H12.5C12.9167 2 13.2708 2.14583 13.5625 2.4375C13.8542 2.72917 14 3.08333 14 3.5ZM12.5 14.3125V5H1.5V14.3125C1.5 14.4375 1.5625 14.5 1.6875 14.5H12.3125C12.4375 14.5 12.5 14.4375 12.5 14.3125Z",
                fill: "#666666",
                fillOpacity: "0.6"
              })
            }),
            onChange: function onChange(date, dateString) {
              var ngayThucHien = moment__WEBPACK_IMPORTED_MODULE_1___default()(dateString[0], "DD-MM-YYYY").toISOString();
              var ngayKetThucThucHien = moment__WEBPACK_IMPORTED_MODULE_1___default()(dateString[1], "DD-MM-YYYY").toISOString();
              setValueForm(_objectSpread(_objectSpread({}, valueForm), {}, {
                begin_date: ngayThucHien,
                end_date: ngayKetThucThucHien
              }));
            }
          })]
        })]
      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div", {
        className: "create__contract__contactInfor border_bottom_3px",
        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div", {
          className: "display__flex",
          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("p", {
            children: "Th\xF4ng tin li\xEAn h\u1EC7"
          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("svg", {
            width: "22",
            height: "22",
            viewBox: "0 0 22 22",
            fill: "none",
            xmlns: "http://www.w3.org/2000/svg",
            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("path", {
              d: "M11 7.32739V14.6537",
              stroke: "#35794A",
              strokeWidth: "1.5",
              strokeLinecap: "round",
              strokeLinejoin: "round"
            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("path", {
              d: "M14.6667 10.9904H7.33337",
              stroke: "#35794A",
              strokeWidth: "1.5",
              strokeLinecap: "round",
              strokeLinejoin: "round"
            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("path", {
              fillRule: "evenodd",
              clipRule: "evenodd",
              d: "M15.6857 1H6.31429C3.04762 1 1 3.31208 1 6.58516V15.4148C1 18.6879 3.0381 21 6.31429 21H15.6857C18.9619 21 21 18.6879 21 15.4148V6.58516C21 3.31208 18.9619 1 15.6857 1Z",
              stroke: "#35794A",
              strokeWidth: "1.5",
              strokeLinecap: "round",
              strokeLinejoin: "round"
            })]
          })]
        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div", {
          className: "field__input_3",
          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("input", {
            className: "style",
            placeholder: "Ng\u01B0\u1EDDi li\xEAn h\u1EC7",
            type: "text"
          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("input", {
            className: "style",
            placeholder: "Email",
            type: "text"
          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("input", {
            className: "style",
            placeholder: "S\u1ED1 \u0111i\u1EC7n tho\u1EA1i",
            type: "text"
          })]
        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("div", {
          className: "field__input",
          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("input", {
            type: "text",
            placeholder: "\u0110\u1ECBa ch\u1EC9",
            className: "style"
          })
        })]
      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div", {
        className: "create__contract__value border_bottom_3px",
        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("p", {
          children: "Gi\xE1 tr\u1ECB h\u1EE3p \u0111\u1ED3ng"
        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div", {
          className: "field__input_2",
          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(antd__WEBPACK_IMPORTED_MODULE_0__.Select, {
            className: "style margin_right_54",
            placeholder: "Lo\u1EA1i h\u1EE3p \u0111\u1ED3ng",
            type: "text",
            onChange: function onChange(value) {
              handleChangeValue("contract_type_id", value);
            },
            children: renderLoaiHopDong()
          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("input", {
            className: "style",
            placeholder: "N\u0103m",
            type: "text"
          })]
        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div", {
          className: "field__input_3",
          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("input", {
            className: "style",
            placeholder: "Chi\u1EBFt kh\u1EA5u (%)",
            type: "text",
            name: "discount_by_percent",
            onChange: function onChange(e) {
              var _e$target3 = e.target,
                value = _e$target3.value,
                name = _e$target3.name;
              handleChangeValue(name, +value);
            }
          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("input", {
            className: "style",
            placeholder: "Thu\u1EBF GTGT(%)",
            type: "text",
            name: "VAT",
            onChange: function onChange(e) {
              var _e$target4 = e.target,
                value = _e$target4.value,
                name = _e$target4.name;
              handleChangeValue(name, +value);
            }
          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("input", {
            className: "style",
            placeholder: "Gi\xE1 tr\u1ECB h\u1EE3p \u0111\u1ED3ng",
            type: "text",
            name: "total",
            onChange: function onChange(e) {
              var _e$target5 = e.target,
                value = _e$target5.value,
                name = _e$target5.name;
              handleChangeValue(name, +value);
            }
          })]
        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("textarea", {
          id: "note",
          placeholder: "Ghi ch\xFA",
          name: "note",
          onChange: function onChange(e) {
            var _e$target6 = e.target,
              value = _e$target6.value,
              name = _e$target6.name;
            handleChangeValue(name, value);
          }
        })]
      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div", {
        className: "create__contract__payment border_bottom_3px",
        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div", {
          className: "display__flex",
          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("p", {
            children: "\u0110\u1EE3t thanh to\xE1n"
          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("svg", {
            width: "22",
            height: "22",
            viewBox: "0 0 22 22",
            fill: "none",
            xmlns: "http://www.w3.org/2000/svg",
            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("path", {
              d: "M11 7.32739V14.6537",
              stroke: "#35794A",
              strokeWidth: "1.5",
              strokeLinecap: "round",
              strokeLinejoin: "round"
            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("path", {
              d: "M14.6667 10.9904H7.33337",
              stroke: "#35794A",
              strokeWidth: "1.5",
              strokeLinecap: "round",
              strokeLinejoin: "round"
            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("path", {
              fillRule: "evenodd",
              clipRule: "evenodd",
              d: "M15.6857 1H6.31429C3.04762 1 1 3.31208 1 6.58516V15.4148C1 18.6879 3.0381 21 6.31429 21H15.6857C18.9619 21 21 18.6879 21 15.4148V6.58516C21 3.31208 18.9619 1 15.6857 1Z",
              stroke: "#35794A",
              strokeWidth: "1.5",
              strokeLinecap: "round",
              strokeLinejoin: "round"
            })]
          })]
        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div", {
          className: "field__input_2",
          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(antd__WEBPACK_IMPORTED_MODULE_0__.DatePicker, {
            suffixIcon: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("svg", {
              width: "14",
              height: "16",
              viewBox: "0 0 14 16",
              fill: "none",
              xmlns: "http://www.w3.org/2000/svg",
              children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("path", {
                d: "M4.625 9H3.375C3.125 9 3 8.875 3 8.625V7.375C3 7.125 3.125 7 3.375 7H4.625C4.875 7 5 7.125 5 7.375V8.625C5 8.875 4.875 9 4.625 9ZM8 8.625C8 8.875 7.875 9 7.625 9H6.375C6.125 9 6 8.875 6 8.625V7.375C6 7.125 6.125 7 6.375 7H7.625C7.875 7 8 7.125 8 7.375V8.625ZM11 8.625C11 8.875 10.875 9 10.625 9H9.375C9.125 9 9 8.875 9 8.625V7.375C9 7.125 9.125 7 9.375 7H10.625C10.875 7 11 7.125 11 7.375V8.625ZM8 11.625C8 11.875 7.875 12 7.625 12H6.375C6.125 12 6 11.875 6 11.625V10.375C6 10.125 6.125 10 6.375 10H7.625C7.875 10 8 10.125 8 10.375V11.625ZM5 11.625C5 11.875 4.875 12 4.625 12H3.375C3.125 12 3 11.875 3 11.625V10.375C3 10.125 3.125 10 3.375 10H4.625C4.875 10 5 10.125 5 10.375V11.625ZM11 11.625C11 11.875 10.875 12 10.625 12H9.375C9.125 12 9 11.875 9 11.625V10.375C9 10.125 9.125 10 9.375 10H10.625C10.875 10 11 10.125 11 10.375V11.625ZM14 3.5V14.5C14 14.9167 13.8542 15.2708 13.5625 15.5625C13.2708 15.8542 12.9167 16 12.5 16H1.5C1.08333 16 0.729167 15.8542 0.4375 15.5625C0.145833 15.2708 0 14.9167 0 14.5V3.5C0 3.08333 0.145833 2.72917 0.4375 2.4375C0.729167 2.14583 1.08333 2 1.5 2H3V0.375C3 0.125 3.125 0 3.375 0H4.625C4.875 0 5 0.125 5 0.375V2H9V0.375C9 0.125 9.125 0 9.375 0H10.625C10.875 0 11 0.125 11 0.375V2H12.5C12.9167 2 13.2708 2.14583 13.5625 2.4375C13.8542 2.72917 14 3.08333 14 3.5ZM12.5 14.3125V5H1.5V14.3125C1.5 14.4375 1.5625 14.5 1.6875 14.5H12.3125C12.4375 14.5 12.5 14.4375 12.5 14.3125Z",
                fill: "#666666",
                fillOpacity: "0.6"
              })
            }),
            className: "style",
            placeholder: "Ng\xE0y thanh to\xE1n",
            format: "DD-MM-YYYY",
            onChange: function onChange(date, dateString) {
              var ngayThanhToan = moment__WEBPACK_IMPORTED_MODULE_1___default()(dateString, "DD-MM-YYYY").toISOString();
              setDotThanhToan(_objectSpread(_objectSpread({}, dotThanhToan), {}, {
                ngayThanhToan: ngayThanhToan
              }));
            }
          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("input", {
            className: "style",
            type: "text",
            placeholder: "S\u1ED1 ti\u1EC1n",
            onChange: function onChange(e) {
              var value = e.target.value;
              setDotThanhToan(_objectSpread(_objectSpread({}, dotThanhToan), {}, {
                soTien: value
              }));
            }
          })]
        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div", {
          className: "contract__payment__process",
          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div", {
            className: "payment__contract",
            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("span", {
              children: "\u0110\u1EE3t thanh to\xE1n 1"
            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("span", {
              children: "01/02/2023"
            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("span", {
              children: "100,000 VN\u0110"
            })]
          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div", {
            className: "payment__contract",
            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("span", {
              children: "\u0110\u1EE3t thanh to\xE1n 2"
            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("span", {
              children: "01/03/2023"
            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("span", {
              children: "1,000,000,000 VN\u0110"
            })]
          })]
        })]
      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div", {
        className: "create__contract__term border_bottom_3px",
        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div", {
          className: "display__flex",
          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("p", {
            children: "H\u1EA1ng m\u1EE5c th\u1EF1c hi\u1EC7n"
          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("svg", {
            width: "22",
            height: "22",
            viewBox: "0 0 22 22",
            fill: "none",
            xmlns: "http://www.w3.org/2000/svg",
            onClick: function onClick() {
              setIsShowModal(true);
            },
            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("path", {
              d: "M11 7.32739V14.6537",
              stroke: "#35794A",
              strokeWidth: "1.5",
              strokeLinecap: "round",
              strokeLinejoin: "round"
            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("path", {
              d: "M14.6667 10.9904H7.33337",
              stroke: "#35794A",
              strokeWidth: "1.5",
              strokeLinecap: "round",
              strokeLinejoin: "round"
            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("path", {
              fillRule: "evenodd",
              clipRule: "evenodd",
              d: "M15.6857 1H6.31429C3.04762 1 1 3.31208 1 6.58516V15.4148C1 18.6879 3.0381 21 6.31429 21H15.6857C18.9619 21 21 18.6879 21 15.4148V6.58516C21 3.31208 18.9619 1 15.6857 1Z",
              stroke: "#35794A",
              strokeWidth: "1.5",
              strokeLinecap: "round",
              strokeLinejoin: "round"
            })]
          })]
        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)(antd__WEBPACK_IMPORTED_MODULE_0__.Table, {
          dataSource: dataTable,
          pagination: false,
          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(Column, {
            className: "item",
            title: "S\u1EA3n ph\u1EA9m",
            dataIndex: "product_ID",
            render: function render(text) {
              var product = productList === null || productList === void 0 ? void 0 : productList.find(function (product) {
                return product.id === text;
              });
              return product === null || product === void 0 ? void 0 : product.name;
            }
          }, "item"), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(Column, {
            className: "content",
            title: "T\xEAn h\u1EA1ng m\u1EE5c",
            dataIndex: "desc"
          }, "content"), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(Column, {
            className: "dateUp",
            title: "Ng\xE0y \u0111\u0103ng",
            render: function render(text) {
              var batDau = moment__WEBPACK_IMPORTED_MODULE_1___default()(new Date(text.from_date)).format("DD-MM-YYYY");
              var ketThuc = moment__WEBPACK_IMPORTED_MODULE_1___default()(new Date(text.to_date)).format("DD-MM-YYYY");
              return "".concat(batDau, " - ").concat(ketThuc);
            }
          }, "dateUp"), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(Column, {
            className: "price",
            title: "Gi\xE1 ti\u1EC1n",
            render: function render(text) {
              var vndCurrency = new Intl.NumberFormat("vi-VN", {
                currency: "VND"
              }).format(text.real_price);
              return "".concat(vndCurrency, " VN\u0110");
            }
          }, "price"), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(Column, {
            className: "thaoTac",
            render: function render() {
              return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("button", {
                children: "X\xF3a"
              });
            }
          })]
        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_modal_contract_Term__WEBPACK_IMPORTED_MODULE_5__["default"], {
          isShowModal: isShowModal,
          setIsShowModal: setIsShowModal,
          setDataTable: setDataTable,
          dataTable: dataTable,
          productList: productList
        })]
      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div", {
        className: "create__contract__footer",
        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("button", {
          className: "footer__btn btn__delete",
          children: "X\xF3a"
        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("button", {
          className: "footer__btn btn__review",
          children: "Xem l\u1EA1i"
        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("button", {
          className: "footer__btn btn__create",
          onClick: function onClick() {
            var _jwtdecode;
            var creater = (_jwtdecode = (0,jwt_decode__WEBPACK_IMPORTED_MODULE_6__["default"])(_title_title__WEBPACK_IMPORTED_MODULE_4__.TOKEN)) === null || _jwtdecode === void 0 ? void 0 : _jwtdecode.id;
            var newData = {
              contract: _objectSpread(_objectSpread({}, valueForm), {}, {
                creater: creater
              }),
              details: _toConsumableArray(dataTable)
            };
            dispatch({
              type: _title_title__WEBPACK_IMPORTED_MODULE_4__.CREATE_CONTRACT,
              data: newData
            });
          },
          children: "T\u1EA1o"
        })]
      })]
    })
  });
}

/***/ }),

/***/ "./src/components/customer/CustomerTable.js":
/*!**************************************************!*\
  !*** ./src/components/customer/CustomerTable.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ CustomerTable; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! antd */ "webpack/sharing/consume/default/antd/antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_icons_fc__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react-icons/fc */ "./node_modules/react-icons/fc/index.esm.js");
/* harmony import */ var _modal_ModalCustomer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../modal/ModalCustomer */ "./src/components/modal/ModalCustomer.js");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "webpack/sharing/consume/default/react-redux/react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _title_title__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../title/title */ "./src/title/title.js");
/* harmony import */ var _components_Loading__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../components/Loading */ "./src/components/Loading.js");
/* harmony import */ var _redux_features_loadingSlice__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../redux/features/loadingSlice */ "./src/redux/features/loadingSlice.js");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }










function CustomerTable() {
  console.log("khach hang");
  var Column = antd__WEBPACK_IMPORTED_MODULE_1__.Table.Column;
  var dispatch = (0,react_redux__WEBPACK_IMPORTED_MODULE_3__.useDispatch)();
  var _useSelector = (0,react_redux__WEBPACK_IMPORTED_MODULE_3__.useSelector)(function (state) {
      return state.loadingReducer;
    }),
    isLoading = _useSelector.isLoading;
  var _useSelector2 = (0,react_redux__WEBPACK_IMPORTED_MODULE_3__.useSelector)(function (state) {
      return state.customerReducer;
    }),
    customerList = _useSelector2.customerList;
  var _useSelector3 = (0,react_redux__WEBPACK_IMPORTED_MODULE_3__.useSelector)(function (state) {
      return state.messageReducer;
    }),
    messageAlert = _useSelector3.messageAlert;
  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false),
    _useState2 = _slicedToArray(_useState, 2),
    isShowModal = _useState2[0],
    setIsShowModal = _useState2[1];
  var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false),
    _useState4 = _slicedToArray(_useState3, 2),
    isShowModalUpdate = _useState4[0],
    setIsShowModalUpdate = _useState4[1];
  var _useState5 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({}),
    _useState6 = _slicedToArray(_useState5, 2),
    dataToModal = _useState6[0],
    setDataToModal = _useState6[1];
  var _useState7 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(1),
    _useState8 = _slicedToArray(_useState7, 2),
    page = _useState8[0],
    setPage = _useState8[1];
  var _useState9 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(10),
    _useState10 = _slicedToArray(_useState9, 2),
    pageNumber = _useState10[0],
    setPageNumber = _useState10[1];
  var _useState11 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({
      name: "",
      tax_number: ""
    }),
    _useState12 = _slicedToArray(_useState11, 2),
    search = _useState12[0],
    setSearch = _useState12[1];
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
    if ((search === null || search === void 0 ? void 0 : search.name) === "" && (search === null || search === void 0 ? void 0 : search.tax_number) === "") {
      dispatch({
        type: _title_title__WEBPACK_IMPORTED_MODULE_4__.GET_CUSTOMER_LIST
      });
      // dispatch(setIsLoading(true))
    }
  }, [search]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
    var type = messageAlert.type,
      msg = messageAlert.msg;
    if (type === "thành công") {
      antd__WEBPACK_IMPORTED_MODULE_1__.message.success(msg);
    } else if (type === "thất bại") {
      antd__WEBPACK_IMPORTED_MODULE_1__.message.error(msg);
    }
  }, [messageAlert]);
  var handleSearchInput = function handleSearchInput(e) {
    var _e$target = e.target,
      value = _e$target.value,
      name = _e$target.name;
    setSearch(_objectSpread(_objectSpread({}, search), {}, _defineProperty({}, name, value)));
  };
  var showLoading = function showLoading() {
    if (isLoading) {
      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_components_Loading__WEBPACK_IMPORTED_MODULE_5__["default"], {});
    }
  };
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div", {
    className: "customer__table content",
    children: [showLoading(), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div", {
      className: "table__features",
      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div", {
        className: "table__features__add",
        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("h1", {
          children: "Qu\u1EA3n l\xFD kh\xE1ch h\xE0ng"
        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(react_icons_fc__WEBPACK_IMPORTED_MODULE_8__.FcPlus, {
          onClick: function onClick() {
            setIsShowModal(true);
          }
        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_modal_ModalCustomer__WEBPACK_IMPORTED_MODULE_2__["default"], {
          title: "Kh\xE1ch h\xE0ng m\u1EDBi",
          isShowModal: isShowModal,
          setIsShowModal: setIsShowModal
        })]
      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div", {
        className: "table__features__search",
        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("input", {
          placeholder: "T\xEAn kh\xE1ch h\xE0ng",
          type: "text",
          name: "name",
          onChange: handleSearchInput
        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("input", {
          placeholder: "M\xE3 s\u1ED1 thu\u1EBF",
          type: "text",
          name: "tax_number",
          onChange: handleSearchInput
        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("div", {
          className: "table__features__search__btn",
          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("button", {
            onClick: function onClick() {
              dispatch({
                type: _title_title__WEBPACK_IMPORTED_MODULE_4__.SEARCH_CUSTOMER,
                searchData: search
              });
            },
            children: "T\xECm ki\u1EBFm"
          })
        })]
      })]
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)(antd__WEBPACK_IMPORTED_MODULE_1__.Table, {
      dataSource: customerList,
      pagination: {
        position: ["bottomLeft"],
        defaultPageSize: 10,
        locale: {
          items_per_page: ""
        },
        defaultCurrent: 1,
        showSizeChanger: true,
        total: customerList.length,
        pageSizeOptions: [10, 50, 100],
        onChange: function onChange(page, pageNumber) {
          setPageNumber(pageNumber);
          setPage(page);
        },
        showTotal: function showTotal(total) {
          if (pageNumber * page < total) {
            return "Hi\u1EC3n th\u1ECB ".concat(pageNumber * page, " trong ").concat(total);
          }
          return "Hi\u1EC3n th\u1ECB ".concat(total, " trong ").concat(total);
        }
      },
      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(Column, {
        className: "customer__table__name",
        title: "T\xEAn kh\xE1ch h\xE0ng",
        dataIndex: "name"
      }, "name"), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(Column, {
        className: "customer__table__address",
        title: "\u0110\u1ECBa ch\u1EC9",
        dataIndex: "address"
      }, "address"), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(Column, {
        className: "customer__table__masothue",
        title: "M\xE3 s\u1ED1 thu\u1EBF",
        dataIndex: "tax_number"
      }, "masothue"), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(Column, {
        className: "customer__table__phone",
        title: "S\u1ED1 \u0111i\u1EC7n tho\u1EA1i",
        dataIndex: "phone"
      }, "phone"), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(Column, {
        className: "customer__table__thaotac",
        render: function render(text) {
          if (text.name === "Công ty HYOSUNG") {
            return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div", {
              className: "table__thaotac",
              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("button", {
                disabled: true,
                children: "Ch\u1EC9nh s\u1EEDa"
              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("button", {
                disabled: true,
                children: "\u0110\xE3 \u1EA9n"
              })]
            });
          } else {
            return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsxs)("div", {
              className: "table__thaotac",
              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("button", {
                onClick: function onClick() {
                  setIsShowModalUpdate(true);
                  setDataToModal(_objectSpread({}, text));
                },
                children: "Ch\u1EC9nh s\u1EEDa"
              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)("button", {
                children: "\u1EA8n"
              })]
            });
          }
        }
      })]
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__.jsx)(_modal_ModalCustomer__WEBPACK_IMPORTED_MODULE_2__["default"], {
      title: "C\u1EADp nh\u1EADt kh\xE1ch h\xE0ng",
      isShowModal: isShowModalUpdate,
      setIsShowModalUpdate: setIsShowModalUpdate,
      dataToModal: dataToModal
    })]
  });
}

/***/ }),

/***/ "./src/components/header/Header.js":
/*!*****************************************!*\
  !*** ./src/components/header/Header.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ Header; }
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! antd */ "webpack/sharing/consume/default/antd/antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-router-dom */ "webpack/sharing/consume/default/react-router-dom/react-router-dom");
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_router_dom__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");





function Header() {
  var location = (0,react_router_dom__WEBPACK_IMPORTED_MODULE_2__.useLocation)();
  var breadcrumbNameMap = {
    '/crm/customer': 'Quản lý khách hàng',
    '/crm/contract': 'Quản lý hợp đồng',
    '/crm/contract/create': 'Tạo hợp đồng'
  };
  var pathSnippets1 = location.pathname.replace("/crm", "");
  var pathSnippets = pathSnippets1.split('/').filter(function (i) {
    return i;
  });
  var extraBreadcrumbItems = pathSnippets.map(function (_, index) {
    var url = "/crm/".concat(pathSnippets.slice(0, index + 1).join("/"));
    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(antd__WEBPACK_IMPORTED_MODULE_1__.Breadcrumb.Item, {
      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(react_router_dom__WEBPACK_IMPORTED_MODULE_2__.NavLink, {
        to: url,
        children: breadcrumbNameMap[url]
      })
    }, url);
  });
  var breadcrumbItems = [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(antd__WEBPACK_IMPORTED_MODULE_1__.Breadcrumb.Item, {
    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(react_router_dom__WEBPACK_IMPORTED_MODULE_2__.NavLink, {
      to: "/",
      children: "H\xF3a \u0111\u01A1n"
    })
  }, "home")].concat(extraBreadcrumbItems);
  var imgBase64 = "";
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div", {
    className: "header",
    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div", {
      className: "header__infor",
      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div", {
        className: "header__avtar",
        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("img", {
          src: "data:image/jpeg;base64,".concat(imgBase64),
          alt: "avatar of user"
        })
      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("p", {
        children: ["Ch\xE0o, ", /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("span", {
          children: "Chung"
        })]
      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("svg", {
        width: "21",
        height: "21",
        viewBox: "0 0 21 21",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("path", {
          d: "M13.244 5.618V4.685C13.244 2.65 11.594 1 9.559 1H4.684C2.65 1 1 2.65 1 4.685V15.815C1 17.85 2.65 19.5 4.684 19.5H9.569C11.598 19.5 13.244 17.855 13.244 15.826V14.883",
          stroke: "#200E32",
          strokeWidth: "1.5",
          strokeLinecap: "round",
          strokeLinejoin: "round"
        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("path", {
          d: "M20.0375 10.25H7.99646",
          stroke: "#200E32",
          strokeWidth: "1.5",
          strokeLinecap: "round",
          strokeLinejoin: "round"
        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("path", {
          d: "M17.1093 7.33472L20.0373 10.2497L17.1093 13.1657",
          stroke: "#200E32",
          strokeWidth: "1.5",
          strokeLinecap: "round",
          strokeLinejoin: "round"
        })]
      })]
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div", {
      className: "header__beadrum",
      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(antd__WEBPACK_IMPORTED_MODULE_1__.Breadcrumb, {
        separator: ">>",
        children: breadcrumbItems
      })
    })]
  });
}

/***/ }),

/***/ "./src/components/modal/ModalCustomer.js":
/*!***********************************************!*\
  !*** ./src/components/modal/ModalCustomer.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ ModalCustomer; }
/* harmony export */ });
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "webpack/sharing/consume/default/antd/antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ "webpack/sharing/consume/default/react-redux/react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _title_title__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../title/title */ "./src/title/title.js");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }






function ModalCustomer(props) {
  var dispatch = (0,react_redux__WEBPACK_IMPORTED_MODULE_2__.useDispatch)();
  var title = props.title,
    isShowModal = props.isShowModal,
    setIsShowModal = props.setIsShowModal,
    dataToModal = props.dataToModal,
    setIsShowModalUpdate = props.setIsShowModalUpdate;
  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false),
    _useState2 = _slicedToArray(_useState, 2),
    valueRadio = _useState2[0],
    setValueRadio = _useState2[1];
  var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({
      is_company: false
    }),
    _useState4 = _slicedToArray(_useState3, 2),
    valueForm = _useState4[0],
    setValueForm = _useState4[1];
  var _useState5 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({
      email: false,
      phone: false
    }),
    _useState6 = _slicedToArray(_useState5, 2),
    validateForm = _useState6[0],
    setValidateForm = _useState6[1];
  // console.log(validateForm)
  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {
    setValueForm(_objectSpread({}, dataToModal));
  }, [dataToModal]);
  var handleCancel = function handleCancel() {
    if (title === "Khách hàng mới") {
      setIsShowModal(false);
      setValidateForm({
        email: false,
        phone: false
      });
    } else if (title === "Cập nhật khách hàng") {
      setIsShowModalUpdate(false);
      setValidateForm({
        email: false,
        phone: false
      });
    }
    setValueForm({
      is_company: false
    });
  };
  var handleOk = function handleOk() {
    var check = checkValueForm();
    if (!check) {
      if (title === "Khách hàng mới") {
        dispatch({
          type: _title_title__WEBPACK_IMPORTED_MODULE_3__.CREATE_CUSTOMER,
          data: valueForm
        });
        setIsShowModal(false);
      } else if (title === "Cập nhật khách hàng") {
        dispatch({
          type: _title_title__WEBPACK_IMPORTED_MODULE_3__.UPDATE_CUSTOMER,
          data: valueForm
        });
        setIsShowModalUpdate(false);
      }
      setValueForm({
        is_company: false
      });
    }
  };
  var handleChangeRadio = function handleChangeRadio(e) {
    var value = e.target.value;
    setValueRadio(value);
    setValueForm(_objectSpread(_objectSpread({}, valueForm), {}, {
      is_company: value
    }));
  };
  var handleChangeInput = function handleChangeInput(e) {
    var _e$target = e.target,
      value = _e$target.value,
      name = _e$target.name;
    setValueForm(_objectSpread(_objectSpread({}, valueForm), {}, _defineProperty({}, name, value)));
  };
  var checkValueForm = function checkValueForm() {
    var check = true;
    var newValidate = {};
    for (var vali in validateForm) {
      if (vali === "phone") {
        if (valueForm[vali] && valueForm[vali] !== "" && valueForm[vali] !== undefined) {
          if (_title_title__WEBPACK_IMPORTED_MODULE_3__.regexPhone.test(valueForm[vali])) {
            newValidate = _objectSpread(_objectSpread({}, newValidate), {}, _defineProperty({}, vali, false));
            check = false;
            console.log("phone");
          } else {
            newValidate = _objectSpread(_objectSpread({}, newValidate), {}, _defineProperty({}, vali, true));
            check = true;
          }
        } else {
          newValidate = _objectSpread(_objectSpread({}, newValidate), {}, _defineProperty({}, vali, true));
          check = true;
        }
      }
      if (vali === "email") {
        if (valueForm[vali] && valueForm[vali] !== "" && valueForm[vali] !== undefined) {
          if (_title_title__WEBPACK_IMPORTED_MODULE_3__.regexEmail.test(valueForm[vali])) {
            newValidate = _objectSpread(_objectSpread({}, newValidate), {}, _defineProperty({}, vali, false));
            check = false;
            console.log("email");
          } else {
            newValidate = _objectSpread(_objectSpread({}, newValidate), {}, _defineProperty({}, vali, true));
            check = true;
          }
        } else {
          newValidate = _objectSpread(_objectSpread({}, newValidate), {}, _defineProperty({}, vali, true));
          check = true;
        }
      }
    }
    setValidateForm(_objectSpread({}, newValidate));
    if (newValidate.email || newValidate.phone) {
      check = true;
    }
    return check;
  };
  var showRemind = function showRemind(nameOfField) {
    if (nameOfField === "phone" && validateForm[nameOfField]) {
      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("p", {
        className: "required__field",
        children: "* S\u1ED1 \u0111i\u1EC7n tho\u1EA1i kh\xF4ng h\u1EE3p l\u1EC7. (B\u1EAFt \u0111\u1EA7u b\u1EB1ng 0 ho\u1EB7c 84 + 9 s\u1ED1)"
      });
    } else if (nameOfField === "email" && validateForm[nameOfField]) {
      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("p", {
        className: "required__field",
        children: "* Email kh\xF4ng h\u1EE3p l\u1EC7"
      });
    }
  };
  var valueOfField = function valueOfField(name) {
    if (valueForm[name] && valueForm[name] !== "" && valueForm[name] !== undefined) {
      return valueForm[name];
    } else {
      return "";
    }
  };
  var regexValue = function regexValue(e) {
    var _e$target2 = e.target,
      value = _e$target2.value,
      name = _e$target2.name;
    if (name === "phone") {
      if (_title_title__WEBPACK_IMPORTED_MODULE_3__.regexPhone.test(value)) {
        setValidateForm(_objectSpread(_objectSpread({}, validateForm), {}, _defineProperty({}, name, false)));
      } else {
        setValidateForm(_objectSpread(_objectSpread({}, validateForm), {}, _defineProperty({}, name, true)));
      }
    } else if (name === "email") {
      if (_title_title__WEBPACK_IMPORTED_MODULE_3__.regexEmail.test(value)) {
        setValidateForm(_objectSpread(_objectSpread({}, validateForm), {}, _defineProperty({}, name, false)));
      } else {
        setValidateForm(_objectSpread(_objectSpread({}, validateForm), {}, _defineProperty({}, name, true)));
      }
    }
  };
  var renderContentModal = function renderContentModal() {
    if (title === "Khách hàng mới") {
      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(antd__WEBPACK_IMPORTED_MODULE_0__.Modal, {
        title: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("span", {
          children: title
        }),
        closeIcon: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("svg", {
          width: "14",
          height: "13",
          viewBox: "0 0 14 13",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("path", {
            d: "M8.61719 6.5L13.4609 11.3438C13.5911 11.474 13.5911 11.6172 13.4609 11.7734L12.5625 12.6719C12.4062 12.8021 12.263 12.8021 12.1328 12.6719L11.3125 11.8125L7.28906 7.82812L2.44531 12.6719C2.3151 12.8021 2.17188 12.8021 2.01562 12.6719L1.11719 11.7734C0.986979 11.6172 0.986979 11.474 1.11719 11.3438L5.96094 6.5L1.11719 1.65625C0.986979 1.52604 0.986979 1.38281 1.11719 1.22656L2.01562 0.328125C2.17188 0.197917 2.3151 0.197917 2.44531 0.328125L7.28906 5.17188L12.1328 0.328125C12.263 0.197917 12.4062 0.197917 12.5625 0.328125L13.4609 1.22656C13.5911 1.38281 13.5911 1.52604 13.4609 1.65625L12.6016 2.47656L8.61719 6.5Z",
            fill: "black"
          })
        }),
        footer: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("div", {
          className: "contract__service__footer",
          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("button", {
            type: "button",
            className: "ant-btn ant-btn-default btn__cancel",
            onClick: handleCancel,
            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("span", {
              children: "H\u1EE7y"
            })
          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("button", {
            type: "button",
            className: "ant-btn ant-btn-default btn__add",
            onClick: handleOk,
            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("span", {
              children: "Th\xEAm"
            })
          })]
        }),
        open: isShowModal,
        onCancel: handleCancel,
        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(antd__WEBPACK_IMPORTED_MODULE_0__.Radio.Group, {
          onChange: handleChangeRadio,
          value: valueRadio,
          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(antd__WEBPACK_IMPORTED_MODULE_0__.Radio, {
            value: false,
            children: "C\xE1 nh\xE2n"
          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(antd__WEBPACK_IMPORTED_MODULE_0__.Radio, {
            value: true,
            children: "Doanh nghi\u1EC7p"
          })]
        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("div", {
          className: "modal__content",
          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("div", {
            className: "modal__field",
            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("input", {
              type: "text",
              placeholder: "T\xEAn kh\xE1ch h\xE0ng",
              name: "name",
              value: valueOfField("name"),
              onChange: handleChangeInput
            })
          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("div", {
            className: "modal__field",
            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("input", {
              type: "text",
              placeholder: "\u0110\u1ECBa ch\u1EC9",
              name: "address",
              value: valueOfField("address"),
              onChange: handleChangeInput
            })
          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("div", {
            className: "modal__field",
            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("input", {
              type: "text",
              placeholder: "M\xE3 s\u1ED1 thu\u1EBF",
              name: "tax_number",
              value: valueOfField("tax_number"),
              onChange: handleChangeInput
            })
          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("div", {
            className: "modal__field",
            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("input", {
              type: "text",
              placeholder: "S\u1ED1 \u0111i\u1EC7n tho\u1EA1i",
              name: "phone",
              value: valueOfField("phone"),
              onBlur: regexValue,
              onChange: handleChangeInput
            }), validateForm !== null && validateForm !== void 0 && validateForm.phone ? showRemind("phone") : ""]
          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("div", {
            className: "modal__field",
            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("input", {
              type: "text",
              placeholder: "Email",
              name: "email",
              value: valueOfField("email"),
              onBlur: regexValue,
              onChange: handleChangeInput
            }), validateForm !== null && validateForm !== void 0 && validateForm.email ? showRemind("email") : ""]
          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("div", {
            className: "modal__upload",
            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("span", {
              children: "Gi\u1EA5y t\u1EDD"
            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("label", {
              htmlFor: "upload",
              children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("svg", {
                width: "18",
                height: "20",
                viewBox: "0 0 18 20",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg",
                children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("path", {
                  d: "M5 11L11 11",
                  stroke: "#CCCCCC",
                  strokeWidth: "2",
                  strokeLinecap: "round"
                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("path", {
                  d: "M5 7L9 7",
                  stroke: "#CCCCCC",
                  strokeWidth: "2",
                  strokeLinecap: "round"
                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("path", {
                  d: "M5 15L9 15",
                  stroke: "#CCCCCC",
                  strokeWidth: "2",
                  strokeLinecap: "round"
                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("path", {
                  d: "M15 11V12C15 13.8613 15 14.7919 14.7553 15.5451C14.2607 17.0673 13.0673 18.2607 11.5451 18.7553C10.7919 19 9.86128 19 8 19V19C6.13872 19 5.20808 19 4.45492 18.7553C2.93273 18.2607 1.73931 17.0673 1.24472 15.5451C1 14.7919 1 13.8613 1 12V7C1 6.07099 1 5.60649 1.06156 5.21783C1.40042 3.07837 3.07837 1.40042 5.21783 1.06156C5.60649 1 6.07099 1 7 1V1",
                  stroke: "#CCCCCC",
                  strokeWidth: "2"
                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("path", {
                  d: "M14 1L14 7",
                  stroke: "#CCCCCC",
                  strokeWidth: "2",
                  strokeLinecap: "round"
                }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("path", {
                  d: "M17 4L11 4",
                  stroke: "#CCCCCC",
                  strokeWidth: "2",
                  strokeLinecap: "round"
                })]
              }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("br", {}), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("span", {
                children: "T\u1EA3i t\xE0i li\u1EC7u"
              })]
            }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("input", {
              id: "upload",
              type: "file"
            })]
          })]
        })]
      });
    } else if (title === "Cập nhật khách hàng") {
      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(antd__WEBPACK_IMPORTED_MODULE_0__.Modal, {
        title: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("span", {
          children: title
        }),
        closeIcon: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("svg", {
          width: "14",
          height: "13",
          viewBox: "0 0 14 13",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("path", {
            d: "M8.61719 6.5L13.4609 11.3438C13.5911 11.474 13.5911 11.6172 13.4609 11.7734L12.5625 12.6719C12.4062 12.8021 12.263 12.8021 12.1328 12.6719L11.3125 11.8125L7.28906 7.82812L2.44531 12.6719C2.3151 12.8021 2.17188 12.8021 2.01562 12.6719L1.11719 11.7734C0.986979 11.6172 0.986979 11.474 1.11719 11.3438L5.96094 6.5L1.11719 1.65625C0.986979 1.52604 0.986979 1.38281 1.11719 1.22656L2.01562 0.328125C2.17188 0.197917 2.3151 0.197917 2.44531 0.328125L7.28906 5.17188L12.1328 0.328125C12.263 0.197917 12.4062 0.197917 12.5625 0.328125L13.4609 1.22656C13.5911 1.38281 13.5911 1.52604 13.4609 1.65625L12.6016 2.47656L8.61719 6.5Z",
            fill: "black"
          })
        }),
        footer: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("div", {
          className: "contract__service__footer",
          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("button", {
            type: "button",
            className: "ant-btn ant-btn-default btn__cancel",
            onClick: handleCancel,
            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("span", {
              children: "H\u1EE7y"
            })
          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("button", {
            type: "button",
            className: "ant-btn ant-btn-default btn__add",
            onClick: handleOk,
            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("span", {
              children: "C\u1EADp nh\u1EADt"
            })
          })]
        }),
        open: isShowModal,
        onCancel: handleCancel,
        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(antd__WEBPACK_IMPORTED_MODULE_0__.Radio.Group, {
          onChange: handleChangeRadio,
          value: valueForm["is_company"],
          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(antd__WEBPACK_IMPORTED_MODULE_0__.Radio, {
            value: false,
            children: "C\xE1 nh\xE2n"
          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(antd__WEBPACK_IMPORTED_MODULE_0__.Radio, {
            value: true,
            children: "Doanh nghi\u1EC7p"
          })]
        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("div", {
          className: "modal__content",
          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("div", {
            className: "modal__field",
            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("input", {
              type: "text",
              placeholder: "T\xEAn kh\xE1ch h\xE0ng",
              name: "name",
              value: valueOfField("name"),
              onChange: handleChangeInput
            })
          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("div", {
            className: "modal__field",
            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("input", {
              type: "text",
              placeholder: "\u0110\u1ECBa ch\u1EC9",
              name: "address",
              value: valueOfField("address"),
              onChange: handleChangeInput
            })
          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("div", {
            className: "modal__field",
            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("input", {
              type: "text",
              placeholder: "M\xE3 s\u1ED1 thu\u1EBF",
              name: "tax_number",
              value: valueOfField("tax_number"),
              onChange: handleChangeInput
            })
          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("div", {
            className: "modal__field",
            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("input", {
              type: "text",
              placeholder: "S\u1ED1 \u0111i\u1EC7n tho\u1EA1i",
              name: "phone",
              value: valueOfField("phone"),
              onBlur: regexValue,
              onChange: handleChangeInput
            }), validateForm !== null && validateForm !== void 0 && validateForm.phone ? showRemind("phone") : ""]
          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("div", {
            className: "modal__field",
            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("input", {
              type: "text",
              placeholder: "Email",
              name: "email",
              value: valueOfField("email"),
              onBlur: regexValue,
              onChange: handleChangeInput
            }), validateForm !== null && validateForm !== void 0 && validateForm.email ? showRemind("email") : ""]
          })]
        })]
      });
    }
  };
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("div", {
    className: "modal__customer",
    children: renderContentModal()
  });
}

/***/ }),

/***/ "./src/components/modal/contract/Term.js":
/*!***********************************************!*\
  !*** ./src/components/modal/contract/Term.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ TermModal; }
/* harmony export */ });
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "webpack/sharing/consume/default/antd/antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! moment */ "webpack/sharing/consume/default/moment/moment");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }






function TermModal(props) {
  var isShowModal = props.isShowModal,
    setIsShowModal = props.setIsShowModal,
    setDataTable = props.setDataTable,
    dataTable = props.dataTable,
    productList = props.productList;
  var RangePicker = antd__WEBPACK_IMPORTED_MODULE_0__.DatePicker.RangePicker;
  var Option = antd__WEBPACK_IMPORTED_MODULE_0__.Select.Option;
  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)({}),
    _useState2 = _slicedToArray(_useState, 2),
    valueModal = _useState2[0],
    setValueModal = _useState2[1];
  console.log(valueModal);
  var handleCancel = function handleCancel() {
    setIsShowModal(false);
    setValueModal({});
  };
  var handleOK = function handleOK() {
    var newDataTable = _toConsumableArray(dataTable);
    newDataTable.push(valueModal);
    setDataTable(_toConsumableArray(newDataTable));
    setIsShowModal(false);
    setValueModal({});
  };
  var handleChange = function handleChange(name, value) {
    if (name !== "" && name.length > 0) {
      setValueModal(_objectSpread(_objectSpread({}, valueModal), {}, _defineProperty({}, name, value)));
    }
  };
  var valueOfField = function valueOfField(name) {
    if (valueModal[name] && valueModal[name] !== "" && name !== "rangePicker") {
      return valueModal[name];
    } else if (name === "rangePicker" && valueModal["from_date"] && valueModal["to_date"]) {
      var newTuNgay = moment__WEBPACK_IMPORTED_MODULE_1___default()(new Date(valueModal["from_date"])).format("DD-MM-YYYY");
      var newDenNgay = moment__WEBPACK_IMPORTED_MODULE_1___default()(new Date(valueModal["to_date"])).format("DD-MM-YYYY");
      return [moment__WEBPACK_IMPORTED_MODULE_1___default()(newTuNgay, "DD-MM-YYYY"), moment__WEBPACK_IMPORTED_MODULE_1___default()(newDenNgay, "DD-MM-YYYY")];
    } else {
      if (name === "desc" || name === "real_price") {
        return "";
      }
      return null;
    }
  };
  var renderOptionProduct = function renderOptionProduct() {
    return productList === null || productList === void 0 ? void 0 : productList.map(function (item) {
      return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(Option, {
        value: item.id,
        children: item.name
      });
    });
  };
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div", {
    className: "modal__customer modal__term",
    children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(antd__WEBPACK_IMPORTED_MODULE_0__.Modal, {
      title: "Th\xEAm h\u1EA1ng m\u1EE5c",
      closeIcon: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("svg", {
        width: "14",
        height: "13",
        viewBox: "0 0 14 13",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("path", {
          d: "M8.61719 6.5L13.4609 11.3438C13.5911 11.474 13.5911 11.6172 13.4609 11.7734L12.5625 12.6719C12.4062 12.8021 12.263 12.8021 12.1328 12.6719L11.3125 11.8125L7.28906 7.82812L2.44531 12.6719C2.3151 12.8021 2.17188 12.8021 2.01562 12.6719L1.11719 11.7734C0.986979 11.6172 0.986979 11.474 1.11719 11.3438L5.96094 6.5L1.11719 1.65625C0.986979 1.52604 0.986979 1.38281 1.11719 1.22656L2.01562 0.328125C2.17188 0.197917 2.3151 0.197917 2.44531 0.328125L7.28906 5.17188L12.1328 0.328125C12.263 0.197917 12.4062 0.197917 12.5625 0.328125L13.4609 1.22656C13.5911 1.38281 13.5911 1.52604 13.4609 1.65625L12.6016 2.47656L8.61719 6.5Z",
          fill: "black"
        })
      }),
      footer: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.Fragment, {
        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("button", {
          type: "button",
          className: "ant-btn ant-btn-default btn__cancel",
          onClick: handleCancel,
          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("span", {
            children: "H\u1EE7y"
          })
        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("button", {
          type: "button",
          className: "ant-btn ant-btn-default btn__add",
          onClick: handleOK,
          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("span", {
            children: "Th\xEAm"
          })
        })]
      }),
      open: isShowModal,
      onCancel: handleCancel,
      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div", {
        className: "modal__content contract__service",
        children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div", {
          className: "modal__field",
          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("input", {
            type: "text",
            placeholder: "T\xEAn h\u1EA1ng m\u1EE5c",
            name: "desc",
            value: valueOfField("desc"),
            onChange: function onChange(e) {
              var _e$target = e.target,
                value = _e$target.value,
                name = _e$target.name;
              handleChange(name, value);
            }
          })
        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div", {
          className: "modal__field field__select",
          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div", {
            children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(antd__WEBPACK_IMPORTED_MODULE_0__.Select, {
              className: "style",
              showSearch: true,
              placeholder: "Ch\u1ECDn s\u1EA3n ph\u1EA9m",
              filterOption: function filterOption(input, option) {
                var _option$children;
                return ((_option$children = option === null || option === void 0 ? void 0 : option.children) !== null && _option$children !== void 0 ? _option$children : "").toLowerCase().includes(input.toLowerCase());
              },
              value: valueOfField("product_ID"),
              onChange: function onChange(value) {
                handleChange("product_ID", value);
              },
              children: renderOptionProduct()
            })
          })
        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div", {
          className: "modal__field",
          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("input", {
            type: "text",
            placeholder: "Gi\xE1 ti\u1EC1n",
            name: "real_price",
            value: valueOfField("real_price"),
            onChange: function onChange(e) {
              var _e$target2 = e.target,
                value = _e$target2.value,
                name = _e$target2.name;
              handleChange(name, +value);
            }
          })
        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div", {
          className: "modal__field",
          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(RangePicker, {
            format: "DD-MM-YYYY",
            suffixIcon: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("svg", {
              width: "14",
              height: "16",
              viewBox: "0 0 14 16",
              fill: "none",
              xmlns: "http://www.w3.org/2000/svg",
              children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("path", {
                d: "M4.625 9H3.375C3.125 9 3 8.875 3 8.625V7.375C3 7.125 3.125 7 3.375 7H4.625C4.875 7 5 7.125 5 7.375V8.625C5 8.875 4.875 9 4.625 9ZM8 8.625C8 8.875 7.875 9 7.625 9H6.375C6.125 9 6 8.875 6 8.625V7.375C6 7.125 6.125 7 6.375 7H7.625C7.875 7 8 7.125 8 7.375V8.625ZM11 8.625C11 8.875 10.875 9 10.625 9H9.375C9.125 9 9 8.875 9 8.625V7.375C9 7.125 9.125 7 9.375 7H10.625C10.875 7 11 7.125 11 7.375V8.625ZM8 11.625C8 11.875 7.875 12 7.625 12H6.375C6.125 12 6 11.875 6 11.625V10.375C6 10.125 6.125 10 6.375 10H7.625C7.875 10 8 10.125 8 10.375V11.625ZM5 11.625C5 11.875 4.875 12 4.625 12H3.375C3.125 12 3 11.875 3 11.625V10.375C3 10.125 3.125 10 3.375 10H4.625C4.875 10 5 10.125 5 10.375V11.625ZM11 11.625C11 11.875 10.875 12 10.625 12H9.375C9.125 12 9 11.875 9 11.625V10.375C9 10.125 9.125 10 9.375 10H10.625C10.875 10 11 10.125 11 10.375V11.625ZM14 3.5V14.5C14 14.9167 13.8542 15.2708 13.5625 15.5625C13.2708 15.8542 12.9167 16 12.5 16H1.5C1.08333 16 0.729167 15.8542 0.4375 15.5625C0.145833 15.2708 0 14.9167 0 14.5V3.5C0 3.08333 0.145833 2.72917 0.4375 2.4375C0.729167 2.14583 1.08333 2 1.5 2H3V0.375C3 0.125 3.125 0 3.375 0H4.625C4.875 0 5 0.125 5 0.375V2H9V0.375C9 0.125 9.125 0 9.375 0H10.625C10.875 0 11 0.125 11 0.375V2H12.5C12.9167 2 13.2708 2.14583 13.5625 2.4375C13.8542 2.72917 14 3.08333 14 3.5ZM12.5 14.3125V5H1.5V14.3125C1.5 14.4375 1.5625 14.5 1.6875 14.5H12.3125C12.4375 14.5 12.5 14.4375 12.5 14.3125Z",
                fill: "#666666",
                fillOpacity: "0.6"
              })
            }),
            className: "style",
            placeholder: ['Ngày đăng', "Kết thúc"],
            value: valueOfField("rangePicker"),
            onChange: function onChange(date, dateString) {
              console.log(dateString);
              var ngayDang = moment__WEBPACK_IMPORTED_MODULE_1___default()(dateString[0], "DD-MM-YYYY").toISOString();
              var ngayKetThuc = moment__WEBPACK_IMPORTED_MODULE_1___default()(dateString[1], "DD-MM-YYYY").toISOString();
              setValueModal(_objectSpread(_objectSpread({}, valueModal), {}, {
                from_date: ngayDang,
                to_date: ngayKetThuc
              }));
            }
          })
        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div", {
          className: "modal__field",
          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("input", {
            type: "text",
            placeholder: "N\u1ED9i dung"
            // name="real_price"
            // onChange={(e)=>{
            //     let {value, name} = e.target;
            //     handleChange(name, value)
            // }}
          })
        }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div", {
          className: "modal__field",
          children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("input", {
            type: "text",
            placeholder: "Ghi ch\xFA"
          })
        })]
      })
    })
  });
}

/***/ }),

/***/ "./src/redux/API/contractAPI.js":
/*!**************************************!*\
  !*** ./src/redux/API/contractAPI.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createContractAPI": function() { return /* binding */ createContractAPI; },
/* harmony export */   "getContractListAPI": function() { return /* binding */ getContractListAPI; },
/* harmony export */   "getContractTypeListAPI": function() { return /* binding */ getContractTypeListAPI; }
/* harmony export */ });
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ "webpack/sharing/consume/default/axios/axios");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _title_title__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../title/title */ "./src/title/title.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


function getContractListAPI(_x, _x2) {
  return _getContractListAPI.apply(this, arguments);
}
function _getContractListAPI() {
  _getContractListAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(page, pageNumber) {
    var result;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.prev = 0;
            _context.next = 3;
            return axios__WEBPACK_IMPORTED_MODULE_0___default()({
              url: "".concat(_title_title__WEBPACK_IMPORTED_MODULE_1__.local, "/api/contract/list?page_size=").concat(pageNumber, "&page=").concat(page, "&sort_by=id&order=desc"),
              method: "GET",
              headers: {
                Authorization: "Bearer " + _title_title__WEBPACK_IMPORTED_MODULE_1__.TOKEN
              }
            });
          case 3:
            result = _context.sent;
            return _context.abrupt("return", result.data);
          case 7:
            _context.prev = 7;
            _context.t0 = _context["catch"](0);
            console.log(_context.t0);
            return _context.abrupt("return", "Thất bại");
          case 11:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[0, 7]]);
  }));
  return _getContractListAPI.apply(this, arguments);
}
function getContractTypeListAPI() {
  return _getContractTypeListAPI.apply(this, arguments);
}
function _getContractTypeListAPI() {
  _getContractTypeListAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
    var result;
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.prev = 0;
            _context2.next = 3;
            return axios__WEBPACK_IMPORTED_MODULE_0___default()({
              url: "".concat(_title_title__WEBPACK_IMPORTED_MODULE_1__.local, "/api/contract/type/list?page_size=10&page=1&sort_by=id&order=desc"),
              method: "GET",
              headers: {
                Authorization: "Bearer " + _title_title__WEBPACK_IMPORTED_MODULE_1__.TOKEN
              }
            });
          case 3:
            result = _context2.sent;
            return _context2.abrupt("return", result.data);
          case 7:
            _context2.prev = 7;
            _context2.t0 = _context2["catch"](0);
            console.log(_context2.t0);
            return _context2.abrupt("return", "Thất bại");
          case 11:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, null, [[0, 7]]);
  }));
  return _getContractTypeListAPI.apply(this, arguments);
}
;
function createContractAPI(_x3) {
  return _createContractAPI.apply(this, arguments);
}
function _createContractAPI() {
  _createContractAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(data) {
    var result;
    return _regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.prev = 0;
            _context3.next = 3;
            return axios__WEBPACK_IMPORTED_MODULE_0___default()({
              url: "".concat(_title_title__WEBPACK_IMPORTED_MODULE_1__.local, "/api/contract/create"),
              method: "POST",
              headers: {
                Authorization: "Bearer " + _title_title__WEBPACK_IMPORTED_MODULE_1__.TOKEN
              },
              data: data
            });
          case 3:
            result = _context3.sent;
            return _context3.abrupt("return", result.data);
          case 7:
            _context3.prev = 7;
            _context3.t0 = _context3["catch"](0);
            console.log(_context3.t0);
            return _context3.abrupt("return", "Thất bại");
          case 11:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3, null, [[0, 7]]);
  }));
  return _createContractAPI.apply(this, arguments);
}

/***/ }),

/***/ "./src/redux/API/customeAPI.js":
/*!*************************************!*\
  !*** ./src/redux/API/customeAPI.js ***!
  \*************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createCustomerAPI": function() { return /* binding */ createCustomerAPI; },
/* harmony export */   "getCustomerListAPI": function() { return /* binding */ getCustomerListAPI; },
/* harmony export */   "searchCustomerAPI": function() { return /* binding */ searchCustomerAPI; },
/* harmony export */   "updateCustomerAPI": function() { return /* binding */ updateCustomerAPI; }
/* harmony export */ });
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ "webpack/sharing/consume/default/axios/axios");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _title_title__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../title/title */ "./src/title/title.js");
var _excluded = ["id"];
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


function getCustomerListAPI() {
  return _getCustomerListAPI.apply(this, arguments);
}
function _getCustomerListAPI() {
  _getCustomerListAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
    var result;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.prev = 0;
            _context.next = 3;
            return axios__WEBPACK_IMPORTED_MODULE_0___default()({
              url: "".concat(_title_title__WEBPACK_IMPORTED_MODULE_1__.local, "/api/client/list"),
              method: "GET"
            });
          case 3:
            result = _context.sent;
            return _context.abrupt("return", result.data);
          case 7:
            _context.prev = 7;
            _context.t0 = _context["catch"](0);
            console.log(_context.t0);
            return _context.abrupt("return", "Thất bại");
          case 11:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[0, 7]]);
  }));
  return _getCustomerListAPI.apply(this, arguments);
}
function createCustomerAPI(_x) {
  return _createCustomerAPI.apply(this, arguments);
}
function _createCustomerAPI() {
  _createCustomerAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(dataCustomer) {
    var result;
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.prev = 0;
            _context2.next = 3;
            return axios__WEBPACK_IMPORTED_MODULE_0___default()({
              url: "".concat(_title_title__WEBPACK_IMPORTED_MODULE_1__.local, "/api/client/create"),
              method: "POST",
              data: dataCustomer
            });
          case 3:
            result = _context2.sent;
            return _context2.abrupt("return", result.data);
          case 7:
            _context2.prev = 7;
            _context2.t0 = _context2["catch"](0);
            console.log(_context2.t0);
            return _context2.abrupt("return", "Thất bại");
          case 11:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, null, [[0, 7]]);
  }));
  return _createCustomerAPI.apply(this, arguments);
}
function searchCustomerAPI(_x2) {
  return _searchCustomerAPI.apply(this, arguments);
}
function _searchCustomerAPI() {
  _searchCustomerAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(data) {
    var name, tax_number, result;
    return _regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.prev = 0;
            name = data.name, tax_number = data.tax_number;
            _context3.next = 4;
            return axios__WEBPACK_IMPORTED_MODULE_0___default()({
              url: "".concat(_title_title__WEBPACK_IMPORTED_MODULE_1__.local, "/api/client/search?name=").concat(name, "&tax_number=").concat(tax_number),
              method: "GET"
            });
          case 4:
            result = _context3.sent;
            return _context3.abrupt("return", result.data);
          case 8:
            _context3.prev = 8;
            _context3.t0 = _context3["catch"](0);
            console.log(_context3.t0);
            return _context3.abrupt("return", "Thất bại");
          case 12:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3, null, [[0, 8]]);
  }));
  return _searchCustomerAPI.apply(this, arguments);
}
function updateCustomerAPI(_x3) {
  return _updateCustomerAPI.apply(this, arguments);
}
function _updateCustomerAPI() {
  _updateCustomerAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(data) {
    var id, rest, result;
    return _regeneratorRuntime().wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            _context4.prev = 0;
            id = data.id, rest = _objectWithoutProperties(data, _excluded);
            _context4.next = 4;
            return axios__WEBPACK_IMPORTED_MODULE_0___default()({
              url: "".concat(_title_title__WEBPACK_IMPORTED_MODULE_1__.local, "/api/client/update?id=").concat(id),
              method: "PUT",
              data: rest
            });
          case 4:
            result = _context4.sent;
            return _context4.abrupt("return", result.data);
          case 8:
            _context4.prev = 8;
            _context4.t0 = _context4["catch"](0);
            console.log(_context4.t0);
            return _context4.abrupt("return", "Thất bại");
          case 12:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4, null, [[0, 8]]);
  }));
  return _updateCustomerAPI.apply(this, arguments);
}
;

/***/ }),

/***/ "./src/redux/API/productAPI.js":
/*!*************************************!*\
  !*** ./src/redux/API/productAPI.js ***!
  \*************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getProductListAPI": function() { return /* binding */ getProductListAPI; }
/* harmony export */ });
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ "webpack/sharing/consume/default/axios/axios");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _title_title__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../title/title */ "./src/title/title.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


function getProductListAPI() {
  return _getProductListAPI.apply(this, arguments);
}
function _getProductListAPI() {
  _getProductListAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
    var result;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.prev = 0;
            _context.next = 3;
            return axios__WEBPACK_IMPORTED_MODULE_0___default()({
              url: "".concat(_title_title__WEBPACK_IMPORTED_MODULE_1__.local, "/api/product/item/list?page_size=10&page=1&sort_by=id&order=desc"),
              method: "GET",
              headers: {
                Authorization: "Bearer " + _title_title__WEBPACK_IMPORTED_MODULE_1__.TOKEN
              }
            });
          case 3:
            result = _context.sent;
            return _context.abrupt("return", result.data);
          case 7:
            _context.prev = 7;
            _context.t0 = _context["catch"](0);
            console.log(_context.t0);
            return _context.abrupt("return", "Thât bại");
          case 11:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[0, 7]]);
  }));
  return _getProductListAPI.apply(this, arguments);
}
;

/***/ }),

/***/ "./src/redux/configStore.js":
/*!**********************************!*\
  !*** ./src/redux/configStore.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "store": function() { return /* binding */ store; }
/* harmony export */ });
/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ "webpack/sharing/consume/default/@reduxjs/toolkit/@reduxjs/toolkit");
/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _redux_saga_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @redux-saga/core */ "./node_modules/@redux-saga/core/dist/redux-saga-core.esm.js");
/* harmony import */ var _rootSaga__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./rootSaga */ "./src/redux/rootSaga.js");
/* harmony import */ var _features_customer_feature__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./features/customer.feature */ "./src/redux/features/customer.feature.js");
/* harmony import */ var _features_loadingSlice__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./features/loadingSlice */ "./src/redux/features/loadingSlice.js");
/* harmony import */ var _features_messageSlice__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./features/messageSlice */ "./src/redux/features/messageSlice.js");
/* harmony import */ var _features_contractSlice__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./features/contractSlice */ "./src/redux/features/contractSlice.js");
/* harmony import */ var _features_productSlice__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./features/productSlice */ "./src/redux/features/productSlice.js");








var sagaMiddleware = (0,_redux_saga_core__WEBPACK_IMPORTED_MODULE_1__["default"])();
var store = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.configureStore)({
  reducer: {
    customerReducer: _features_customer_feature__WEBPACK_IMPORTED_MODULE_3__["default"],
    loadingReducer: _features_loadingSlice__WEBPACK_IMPORTED_MODULE_4__["default"],
    messageReducer: _features_messageSlice__WEBPACK_IMPORTED_MODULE_5__["default"],
    contractReducer: _features_contractSlice__WEBPACK_IMPORTED_MODULE_6__["default"],
    productReducer: _features_productSlice__WEBPACK_IMPORTED_MODULE_7__["default"]
  },
  middleware: function middleware(getDefaultMiddleware) {
    return getDefaultMiddleware().concat(sagaMiddleware);
  }
});
sagaMiddleware.run(_rootSaga__WEBPACK_IMPORTED_MODULE_2__["default"]);

/***/ }),

/***/ "./src/redux/features/contractSlice.js":
/*!*********************************************!*\
  !*** ./src/redux/features/contractSlice.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "setContractList": function() { return /* binding */ setContractList; },
/* harmony export */   "setContractTypeList": function() { return /* binding */ setContractTypeList; }
/* harmony export */ });
/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ "webpack/sharing/consume/default/@reduxjs/toolkit/@reduxjs/toolkit");
/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__);

var initialState = {
  contractList: [],
  total: 0,
  contractTypeList: []
};
var contractSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({
  name: "contractSlice",
  initialState: initialState,
  reducers: {
    setContractList: function setContractList(state, action) {
      var _action$payload = action.payload,
        total = _action$payload.total,
        contractList = _action$payload.contractList;
      state.contractList = contractList;
      state.total = total;
    },
    setContractTypeList: function setContractTypeList(state, action) {
      state.contractTypeList = action.payload;
    }
  }
});
var _contractSlice$action = contractSlice.actions,
  setContractList = _contractSlice$action.setContractList,
  setContractTypeList = _contractSlice$action.setContractTypeList;

/* harmony default export */ __webpack_exports__["default"] = (contractSlice.reducer);

/***/ }),

/***/ "./src/redux/features/customer.feature.js":
/*!************************************************!*\
  !*** ./src/redux/features/customer.feature.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "addCustomer": function() { return /* binding */ addCustomer; },
/* harmony export */   "setCustomerList": function() { return /* binding */ setCustomerList; },
/* harmony export */   "updateCusomer": function() { return /* binding */ updateCusomer; }
/* harmony export */ });
/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ "webpack/sharing/consume/default/@reduxjs/toolkit/@reduxjs/toolkit");
/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__);

var initialState = {
  customerList: []
};
var customerSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({
  name: "customerSlice",
  initialState: initialState,
  reducers: {
    setCustomerList: function setCustomerList(state, action) {
      state.customerList = action.payload;
    },
    addCustomer: function addCustomer(state, action) {
      state.customerList.unshift(action.payload);
    },
    updateCusomer: function updateCusomer(state, action) {
      var id = action.payload.id;
      var index = state.customerList.findIndex(function (client) {
        return client.id === id;
      });
      state.customerList[index] = action.payload;
    }
  }
});
var _customerSlice$action = customerSlice.actions,
  setCustomerList = _customerSlice$action.setCustomerList,
  addCustomer = _customerSlice$action.addCustomer,
  updateCusomer = _customerSlice$action.updateCusomer;

/* harmony default export */ __webpack_exports__["default"] = (customerSlice.reducer);

/***/ }),

/***/ "./src/redux/features/loadingSlice.js":
/*!********************************************!*\
  !*** ./src/redux/features/loadingSlice.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "setIsLoading": function() { return /* binding */ setIsLoading; }
/* harmony export */ });
/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ "webpack/sharing/consume/default/@reduxjs/toolkit/@reduxjs/toolkit");
/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__);

var initialState = {
  isLoading: false
};
var loadingSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({
  name: "loadingSlice",
  initialState: initialState,
  reducers: {
    setIsLoading: function setIsLoading(state, action) {
      state.isLoading = action.payload;
    }
  }
});
var setIsLoading = loadingSlice.actions.setIsLoading;

/* harmony default export */ __webpack_exports__["default"] = (loadingSlice.reducer);

/***/ }),

/***/ "./src/redux/features/messageSlice.js":
/*!********************************************!*\
  !*** ./src/redux/features/messageSlice.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "setMessage": function() { return /* binding */ setMessage; }
/* harmony export */ });
/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ "webpack/sharing/consume/default/@reduxjs/toolkit/@reduxjs/toolkit");
/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__);

var initialState = {
  messageAlert: {}
};
var messageSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({
  name: "messageSlice",
  initialState: initialState,
  reducers: {
    setMessage: function setMessage(state, action) {
      state.messageAlert = action.payload;
    }
  }
});
var setMessage = messageSlice.actions.setMessage;

/* harmony default export */ __webpack_exports__["default"] = (messageSlice.reducer);

/***/ }),

/***/ "./src/redux/features/productSlice.js":
/*!********************************************!*\
  !*** ./src/redux/features/productSlice.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "setProductList": function() { return /* binding */ setProductList; },
/* harmony export */   "setProductTypeList": function() { return /* binding */ setProductTypeList; }
/* harmony export */ });
/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ "webpack/sharing/consume/default/@reduxjs/toolkit/@reduxjs/toolkit");
/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__);

var initialState = {
  productTypeList: [],
  productList: []
};
var productSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({
  name: "productSlice",
  initialState: initialState,
  reducers: {
    setProductTypeList: function setProductTypeList(state, action) {
      state.productTypeList = action.payload;
    },
    setProductList: function setProductList(state, action) {
      state.productList = action.payload;
    }
  }
});
var _productSlice$actions = productSlice.actions,
  setProductTypeList = _productSlice$actions.setProductTypeList,
  setProductList = _productSlice$actions.setProductList;

/* harmony default export */ __webpack_exports__["default"] = (productSlice.reducer);

/***/ }),

/***/ "./src/redux/middleware/contract.middleware.js":
/*!*****************************************************!*\
  !*** ./src/redux/middleware/contract.middleware.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ contractMiddleware; }
/* harmony export */ });
/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! redux-saga/effects */ "./node_modules/redux-saga/dist/redux-saga-effects-npm-proxy.esm.js");
/* harmony import */ var _title_title__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../title/title */ "./src/title/title.js");
/* harmony import */ var _API_contractAPI__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../API/contractAPI */ "./src/redux/API/contractAPI.js");
/* harmony import */ var _features_contractSlice__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../features/contractSlice */ "./src/redux/features/contractSlice.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
var _marked = /*#__PURE__*/_regeneratorRuntime().mark(getContractList),
  _marked2 = /*#__PURE__*/_regeneratorRuntime().mark(getContractTypeList),
  _marked3 = /*#__PURE__*/_regeneratorRuntime().mark(createContract),
  _marked4 = /*#__PURE__*/_regeneratorRuntime().mark(contractMiddleware);




function getContractList(payload) {
  var _payload$data, page, pageNumber, result, total, data;
  return _regeneratorRuntime().wrap(function getContractList$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _payload$data = payload.data, page = _payload$data.page, pageNumber = _payload$data.pageNumber;
          _context.next = 3;
          return (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.call)(_API_contractAPI__WEBPACK_IMPORTED_MODULE_2__.getContractListAPI, page, pageNumber);
        case 3:
          result = _context.sent;
          total = result.total, data = result.data;
          _context.next = 7;
          return (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.put)((0,_features_contractSlice__WEBPACK_IMPORTED_MODULE_3__.setContractList)({
            total: total,
            contractList: data
          }));
        case 7:
        case "end":
          return _context.stop();
      }
    }
  }, _marked);
}
function getContractTypeList() {
  var result, data;
  return _regeneratorRuntime().wrap(function getContractTypeList$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          _context2.next = 2;
          return (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.call)(_API_contractAPI__WEBPACK_IMPORTED_MODULE_2__.getContractTypeListAPI);
        case 2:
          result = _context2.sent;
          data = result.data;
          _context2.next = 6;
          return (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.put)((0,_features_contractSlice__WEBPACK_IMPORTED_MODULE_3__.setContractTypeList)(data));
        case 6:
        case "end":
          return _context2.stop();
      }
    }
  }, _marked2);
}
;
function createContract(payload) {
  var data, result;
  return _regeneratorRuntime().wrap(function createContract$(_context3) {
    while (1) {
      switch (_context3.prev = _context3.next) {
        case 0:
          data = payload.data;
          _context3.next = 3;
          return (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.call)(_API_contractAPI__WEBPACK_IMPORTED_MODULE_2__.createContractAPI, data);
        case 3:
          result = _context3.sent;
          console.log(result);
        case 5:
        case "end":
          return _context3.stop();
      }
    }
  }, _marked3);
}
function contractMiddleware() {
  return _regeneratorRuntime().wrap(function contractMiddleware$(_context4) {
    while (1) {
      switch (_context4.prev = _context4.next) {
        case 0:
          _context4.next = 2;
          return (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.takeLatest)(_title_title__WEBPACK_IMPORTED_MODULE_1__.GET_CONTRACT_LIST, getContractList);
        case 2:
          _context4.next = 4;
          return (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.takeLatest)(_title_title__WEBPACK_IMPORTED_MODULE_1__.GET_CONTRACT_TYPE_LIST, getContractTypeList);
        case 4:
          _context4.next = 6;
          return (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.takeLatest)(_title_title__WEBPACK_IMPORTED_MODULE_1__.CREATE_CONTRACT, createContract);
        case 6:
        case "end":
          return _context4.stop();
      }
    }
  }, _marked4);
}

/***/ }),

/***/ "./src/redux/middleware/customer.middleware.js":
/*!*****************************************************!*\
  !*** ./src/redux/middleware/customer.middleware.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ customerMiddleware; }
/* harmony export */ });
/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! redux-saga/effects */ "./node_modules/redux-saga/dist/redux-saga-effects-npm-proxy.esm.js");
/* harmony import */ var _title_title__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../title/title */ "./src/title/title.js");
/* harmony import */ var _API_customeAPI__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../API/customeAPI */ "./src/redux/API/customeAPI.js");
/* harmony import */ var _features_customer_feature__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../features/customer.feature */ "./src/redux/features/customer.feature.js");
/* harmony import */ var _features_loadingSlice__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../features/loadingSlice */ "./src/redux/features/loadingSlice.js");
/* harmony import */ var _features_messageSlice__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../features/messageSlice */ "./src/redux/features/messageSlice.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
var _marked = /*#__PURE__*/_regeneratorRuntime().mark(getCustomerList),
  _marked2 = /*#__PURE__*/_regeneratorRuntime().mark(createCustomer),
  _marked3 = /*#__PURE__*/_regeneratorRuntime().mark(searchCustomer),
  _marked4 = /*#__PURE__*/_regeneratorRuntime().mark(updateCustomer),
  _marked5 = /*#__PURE__*/_regeneratorRuntime().mark(customerMiddleware);






function getCustomerList() {
  var result, code, data;
  return _regeneratorRuntime().wrap(function getCustomerList$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.call)(_API_customeAPI__WEBPACK_IMPORTED_MODULE_2__.getCustomerListAPI);
        case 2:
          result = _context.sent;
          code = result.code, data = result.data;
          if (!(code === 200)) {
            _context.next = 9;
            break;
          }
          _context.next = 7;
          return (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.put)((0,_features_customer_feature__WEBPACK_IMPORTED_MODULE_3__.setCustomerList)(data));
        case 7:
          _context.next = 9;
          return (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.put)((0,_features_loadingSlice__WEBPACK_IMPORTED_MODULE_4__.setIsLoading)(false));
        case 9:
        case "end":
          return _context.stop();
      }
    }
  }, _marked);
}
function createCustomer(payload) {
  var data, result, code, dataResponse;
  return _regeneratorRuntime().wrap(function createCustomer$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          data = payload.data;
          if (!data.is_company) {
            data.is_company = false;
          }
          _context2.next = 4;
          return (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.call)(_API_customeAPI__WEBPACK_IMPORTED_MODULE_2__.createCustomerAPI, data);
        case 4:
          result = _context2.sent;
          code = result.code, dataResponse = result.data;
          if (!(code === 200)) {
            _context2.next = 13;
            break;
          }
          _context2.next = 9;
          return (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.put)((0,_features_customer_feature__WEBPACK_IMPORTED_MODULE_3__.addCustomer)(dataResponse));
        case 9:
          _context2.next = 11;
          return (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.put)((0,_features_messageSlice__WEBPACK_IMPORTED_MODULE_5__.setMessage)({
            type: "thành công",
            msg: "Tạo khách hàng thành công."
          }));
        case 11:
          _context2.next = 15;
          break;
        case 13:
          _context2.next = 15;
          return (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.put)((0,_features_messageSlice__WEBPACK_IMPORTED_MODULE_5__.setMessage)({
            type: "thất bại",
            msg: "Tạo khách hàng thất bại."
          }));
        case 15:
        case "end":
          return _context2.stop();
      }
    }
  }, _marked2);
}
function searchCustomer(payload) {
  var searchData, result, code, dataResponse;
  return _regeneratorRuntime().wrap(function searchCustomer$(_context3) {
    while (1) {
      switch (_context3.prev = _context3.next) {
        case 0:
          searchData = payload.searchData;
          _context3.next = 3;
          return (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.call)(_API_customeAPI__WEBPACK_IMPORTED_MODULE_2__.searchCustomerAPI, searchData);
        case 3:
          result = _context3.sent;
          code = result.code, dataResponse = result.data;
          if (!(code === 200)) {
            _context3.next = 12;
            break;
          }
          _context3.next = 8;
          return (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.put)((0,_features_customer_feature__WEBPACK_IMPORTED_MODULE_3__.setCustomerList)(dataResponse));
        case 8:
          _context3.next = 10;
          return (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.put)((0,_features_messageSlice__WEBPACK_IMPORTED_MODULE_5__.setMessage)({
            type: "thành công",
            msg: "Thao tác thành công."
          }));
        case 10:
          _context3.next = 14;
          break;
        case 12:
          _context3.next = 14;
          return (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.put)((0,_features_messageSlice__WEBPACK_IMPORTED_MODULE_5__.setMessage)({
            type: "thất bại",
            msg: "Thao tác thất bại."
          }));
        case 14:
        case "end":
          return _context3.stop();
      }
    }
  }, _marked3);
}
function updateCustomer(payload) {
  var data, result, code, dataResponse;
  return _regeneratorRuntime().wrap(function updateCustomer$(_context4) {
    while (1) {
      switch (_context4.prev = _context4.next) {
        case 0:
          data = payload.data;
          _context4.next = 3;
          return (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.call)(_API_customeAPI__WEBPACK_IMPORTED_MODULE_2__.updateCustomerAPI, data);
        case 3:
          result = _context4.sent;
          code = result.code, dataResponse = result.data;
          if (!(+code === 200)) {
            _context4.next = 12;
            break;
          }
          _context4.next = 8;
          return (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.put)((0,_features_customer_feature__WEBPACK_IMPORTED_MODULE_3__.updateCusomer)(dataResponse));
        case 8:
          _context4.next = 10;
          return (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.put)((0,_features_messageSlice__WEBPACK_IMPORTED_MODULE_5__.setMessage)({
            type: "thành công",
            msg: "Thao tác thành công."
          }));
        case 10:
          _context4.next = 14;
          break;
        case 12:
          _context4.next = 14;
          return (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.put)((0,_features_messageSlice__WEBPACK_IMPORTED_MODULE_5__.setMessage)({
            type: "thất bại",
            msg: "Thao tác thất bại."
          }));
        case 14:
        case "end":
          return _context4.stop();
      }
    }
  }, _marked4);
}
;
function customerMiddleware() {
  return _regeneratorRuntime().wrap(function customerMiddleware$(_context5) {
    while (1) {
      switch (_context5.prev = _context5.next) {
        case 0:
          _context5.next = 2;
          return (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.takeLatest)(_title_title__WEBPACK_IMPORTED_MODULE_1__.GET_CUSTOMER_LIST, getCustomerList);
        case 2:
          _context5.next = 4;
          return (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.takeLatest)(_title_title__WEBPACK_IMPORTED_MODULE_1__.CREATE_CUSTOMER, createCustomer);
        case 4:
          _context5.next = 6;
          return (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.takeLatest)(_title_title__WEBPACK_IMPORTED_MODULE_1__.SEARCH_CUSTOMER, searchCustomer);
        case 6:
          _context5.next = 8;
          return (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.takeLatest)(_title_title__WEBPACK_IMPORTED_MODULE_1__.UPDATE_CUSTOMER, updateCustomer);
        case 8:
        case "end":
          return _context5.stop();
      }
    }
  }, _marked5);
}

/***/ }),

/***/ "./src/redux/middleware/product.middleware.js":
/*!****************************************************!*\
  !*** ./src/redux/middleware/product.middleware.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ productMiddleware; }
/* harmony export */ });
/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! redux-saga/effects */ "./node_modules/redux-saga/dist/redux-saga-effects-npm-proxy.esm.js");
/* harmony import */ var _title_title__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../title/title */ "./src/title/title.js");
/* harmony import */ var _API_productAPI__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../API/productAPI */ "./src/redux/API/productAPI.js");
/* harmony import */ var _features_productSlice__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../features/productSlice */ "./src/redux/features/productSlice.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
var _marked = /*#__PURE__*/_regeneratorRuntime().mark(getProductList),
  _marked2 = /*#__PURE__*/_regeneratorRuntime().mark(productMiddleware);




function getProductList() {
  var result;
  return _regeneratorRuntime().wrap(function getProductList$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.call)(_API_productAPI__WEBPACK_IMPORTED_MODULE_2__.getProductListAPI);
        case 2:
          result = _context.sent;
          _context.next = 5;
          return (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.put)((0,_features_productSlice__WEBPACK_IMPORTED_MODULE_3__.setProductList)(result.data));
        case 5:
        case "end":
          return _context.stop();
      }
    }
  }, _marked);
}
function productMiddleware() {
  return _regeneratorRuntime().wrap(function productMiddleware$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          _context2.next = 2;
          return (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.takeLatest)(_title_title__WEBPACK_IMPORTED_MODULE_1__.GET_PRODUCT_LIST, getProductList);
        case 2:
        case "end":
          return _context2.stop();
      }
    }
  }, _marked2);
}

/***/ }),

/***/ "./src/redux/rootSaga.js":
/*!*******************************!*\
  !*** ./src/redux/rootSaga.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ rootSaga; }
/* harmony export */ });
/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! redux-saga/effects */ "./node_modules/redux-saga/dist/redux-saga-effects-npm-proxy.esm.js");
/* harmony import */ var _middleware_contract_middleware__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./middleware/contract.middleware */ "./src/redux/middleware/contract.middleware.js");
/* harmony import */ var _middleware_customer_middleware__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./middleware/customer.middleware */ "./src/redux/middleware/customer.middleware.js");
/* harmony import */ var _middleware_product_middleware__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./middleware/product.middleware */ "./src/redux/middleware/product.middleware.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
var _marked = /*#__PURE__*/_regeneratorRuntime().mark(rootSaga);




function rootSaga() {
  return _regeneratorRuntime().wrap(function rootSaga$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.all)([(0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.call)(_middleware_customer_middleware__WEBPACK_IMPORTED_MODULE_2__["default"]), (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.call)(_middleware_contract_middleware__WEBPACK_IMPORTED_MODULE_1__["default"]), (0,redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__.call)(_middleware_product_middleware__WEBPACK_IMPORTED_MODULE_3__["default"])]);
        case 2:
        case "end":
          return _context.stop();
      }
    }
  }, _marked);
}

/***/ }),

/***/ "./src/title/title.js":
/*!****************************!*\
  !*** ./src/title/title.js ***!
  \****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CREATE_CONTRACT": function() { return /* binding */ CREATE_CONTRACT; },
/* harmony export */   "CREATE_CUSTOMER": function() { return /* binding */ CREATE_CUSTOMER; },
/* harmony export */   "GET_CONTRACT_LIST": function() { return /* binding */ GET_CONTRACT_LIST; },
/* harmony export */   "GET_CONTRACT_TYPE_LIST": function() { return /* binding */ GET_CONTRACT_TYPE_LIST; },
/* harmony export */   "GET_CUSTOMER_LIST": function() { return /* binding */ GET_CUSTOMER_LIST; },
/* harmony export */   "GET_PRODUCT_LIST": function() { return /* binding */ GET_PRODUCT_LIST; },
/* harmony export */   "GET_PRODUCT_TYPE_LIST": function() { return /* binding */ GET_PRODUCT_TYPE_LIST; },
/* harmony export */   "SEARCH_CUSTOMER": function() { return /* binding */ SEARCH_CUSTOMER; },
/* harmony export */   "TOKEN": function() { return /* binding */ TOKEN; },
/* harmony export */   "UPDATE_CUSTOMER": function() { return /* binding */ UPDATE_CUSTOMER; },
/* harmony export */   "local": function() { return /* binding */ local; },
/* harmony export */   "regexEmail": function() { return /* binding */ regexEmail; },
/* harmony export */   "regexPhone": function() { return /* binding */ regexPhone; }
/* harmony export */ });
/* harmony import */ var _untils_helper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../untils/helper */ "./src/untils/helper.js");

var local = "http://localhost:3003";
var TOKEN = (0,_untils_helper__WEBPACK_IMPORTED_MODULE_0__.getTokenInCookie)();
var regexEmail = /^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$/;
var regexPhone = /(84[3|5|7|8|9]|0[3|5|7|8|9])+([0-9]{8}|[0-9]{9})\b/;
var GET_CUSTOMER_LIST = "GET_CUSTOMER_LIST";
var GET_PRODUCT_TYPE_LIST = "GET_PRODUCT_TYPE_LIST";
var GET_PRODUCT_LIST = "GET_PRODUCT_LIST";
var GET_CONTRACT_TYPE_LIST = "GET_CONTRACT_TYPE_LIST";
var CREATE_CUSTOMER = "CREATE_CUSTOMER";
var UPDATE_CUSTOMER = "UPDATE_CUSTOMER";
var SEARCH_CUSTOMER = "SEARCH_CUSTOMER";
var GET_CONTRACT_LIST = "GET_CONTRACT_LIST";
var CREATE_CONTRACT = "CREATE_CONTRACT";

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/App.css":
/*!***********************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/App.css ***!
  \***********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, "*,\n:after,\n:before {\n    box-sizing: border-box;\n}\n\n#root {\n    width: 100%;\n    height: 100%;\n}\n\ndiv.App {\n    /* display: flex; */\n    background-color: #eef0f8;\n    width: 100%;\n    min-height: 100%;\n    position: relative;\n    padding-bottom: 35px;\n}\n\n.App p {\n    margin: 0;\n}\n\nbody {\n    font-family: -apple-system, BlinkMacSystemFont, segoe ui, Roboto, helvetica neue, Arial, noto sans, sans-serif, apple color emoji, segoe ui emoji, segoe ui symbol, noto color emoji !important;\n}\n\n.style {\n    border: none;\n    border-bottom: 1px solid #CCCCCC;\n    width: 525px;\n    padding: 0 0 9px 9px;\n    outline: none;\n    color: #666666;\n    font-size: 15px;\n}\n\n.style::placeholder {\n    color: #666666;\n}\n\np.required__field {\n    color: red;\n    margin-bottom: 0;\n    text-align: left;\n    padding-left: 63px;\n}\n\n/* loading css */\n\n.loading {\n    position: absolute;\n    height: -webkit-fill-available;\n    width: calc(100% - 80px);\n    z-index: 100;\n    background: rgba(255, 255, 255, 0.8);\n}\n\n.loading>svg {\n    height: 100%;\n    font-size: 70px;\n}\n\n/* ------ Hêt loading ----------- */\n/* sidebar */\n\n.sidebar {\n    width: 265px;\n    min-height: 100%;\n    position: fixed;\n    top: 0;\n    left: 0;\n    background-color: #459C60;\n}\n\n.sidebar .bg_pri_blue {\n    background-color: #35794a;\n}\n\n.sidebar .sidebar__logo {\n    display: flex;\n    width: 100%;\n    height: 65px;\n    justify-content: center;\n    align-items: center;\n}\n\n.sidebar .sidebar__personal__information {\n    width: 100%;\n    padding: 14px 0 14px 23px;\n}\n\n.sidebar .sidebar__personal__information p {\n    display: flex;\n    align-items: center;\n    margin: 0;\n    font-size: 16px;\n    color: white;\n    font-weight: bold;\n}\n\n.sidebar .sidebar__personal__information svg {\n    font-size: 20px;\n    margin-right: 10px;\n}\n\n.sidebar .sidebar__sub__menu {\n    padding: 10px 0;\n}\n\n.sidebar .sidebar__sub__menu ul {\n    list-style-type: none;\n    padding-left: 53px;\n    margin: 0;\n}\n\n.sidebar .sidebar__sub__menu ul li {\n    padding: 7px 0;\n}\n\n.sidebar .sidebar__sub__menu ul li a {\n    color: white;\n    font-size: 16px;\n    font-weight: 400;\n    text-decoration: none;\n}\n\n.sidebar_SubMenu__XZeb6 ul.ant-menu {\n    background-color: #35794a;\n}\n\n.sidebar_SubMenu__XZeb6 ul li.ant-menu-submenu div svg {\n    color: white;\n    width: 20px;\n    height: 20px;\n    margin-right: 10px;\n}\n\n.sidebar_SubMenu__XZeb6 .ant-menu-inline.ant-menu-root .ant-menu-submenu-title>.ant-menu-title-content {\n    font-weight: bold;\n    color: white;\n    font-size: 16px;\n}\n\n.sidebar_SubMenu__XZeb6 .ant-menu-submenu-arrow {\n    color: white;\n}\n\n.sidebar_SubMenu__XZeb6 ul.ant-menu li.ant-menu-item {\n    align-items: center;\n    transition: all .3s;\n}\n\n.sidebar_SubMenu__XZeb6 ul.ant-menu li.ant-menu-item>svg {\n    width: 20px;\n    height: 20px;\n    color: white;\n}\n\n.sidebar_SubMenu__XZeb6 .ant-menu-inline.ant-menu-root .ant-menu-submenu-title>.ant-menu-title-content,\n.sidebar_SubMenu__XZeb6 .ant-menu-inline.ant-menu-root .ant-menu-item>.ant-menu-title-content {\n    color: white;\n    font-size: 16px;\n    margin-left: 0;\n}\n\n.sidebar_SubMenu__XZeb6 .ant-menu-light .ant-menu-item-active,\n.sidebar_SubMenu__XZeb6 .ant-menu-light .ant-menu-item:hover {\n    background-color: white;\n}\n\n.sidebar_SubMenu__XZeb6 ul li.ant-menu-submenu ul.ant-menu .ant-menu-item-active span.ant-menu-title-content,\n.sidebar_SubMenu__XZeb6 ul li.ant-menu-submenu ul.ant-menu .ant-menu-item-selected svg,\n.sidebar_SubMenu__XZeb6 ul li.ant-menu-submenu ul.ant-menu .ant-menu-item:hover span.ant-menu-title-content,\n.sidebar_SubMenu__XZeb6 ul li.ant-menu-submenu ul.ant-menu .ant-menu-item:hover svg,\n.sidebar_SubMenu__XZeb6 ul li.ant-menu-submenu ul.ant-menu .ant-menu-item-selected span.ant-menu-title-content {\n    color: black;\n}\n\n.sidebar_SubMenu__XZeb6 .ant-menu-inline .ant-menu-item:after {\n    border-right: 3px solid #35796C;\n}\n\n.sidebar_SubMenu__XZeb6 .ant-menu-submenu:hover>.ant-menu-submenu-title>.ant-menu-submenu-arrow {\n    color: #8bc34a;\n}\n\n/* hết sidebar */\n\n/* CSS Header */\n\n.header {\n    position: fixed;\n    top: 0;\n    left: 265px;\n    width: calc(100% - 265px);\n    height: fit-content;\n    background-color: white;\n    z-index: 10;\n}\n\n.header .header__infor {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    padding-right: 28px;\n    height: 65px;\n    border-bottom: 1px solid #EEEFF3;\n    ;\n}\n\n.header .header__infor .header__avtar {\n    width: 36px;\n    height: 36px;\n    overflow: hidden;\n    margin-right: 17px;\n    border-radius: 50%;\n}\n\n.header .header__infor .header__avtar img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n}\n\n.header .header__infor p {\n    margin-right: 21px;\n}\n\n.header .header__infor svg {\n    cursor: pointer;\n}\n\n.header .header__infor p span {\n    font-weight: bold;\n}\n\n.header .header__beadrum {\n    height: 54px;\n    padding-left: 36px;\n}\n\n.header .header__beadrum nav {\n    line-height: 54px;\n}\n\n/* Hết CSS Header */\n/* ----------------------------------------------- */\n/* CSS customer table */\n\n.customer__table {\n    position: relative;\n}\n\n.App>div.content {\n    height: fit-content;\n    margin-left: 265px;\n    margin-top: 119px;\n    padding: 35px 40px 0 40px;\n}\n\n.customer__table table thead tr th {\n    color: #A1A5B7;\n    background-color: white;\n}\n\n.customer__table .ant-table-wrapper ul li.ant-pagination-item:hover,\n.customer__table .ant-table-wrapper ul li.ant-pagination-item:hover a {\n    border-color: #459C60;\n    color: #459C60;\n}\n\n.customer__table .table__features {\n    padding: 17px 30px;\n    background-color: white;\n    border-bottom: 1px solid #EEEFF3;\n    border-top-left-radius: 12px;\n    border-top-right-radius: 12px;\n    overflow: hidden;\n}\n\n.customer__table .table__features .table__features__add {\n    margin-bottom: 13px;\n}\n\n.customer__table .table__features .table__features__add h1 {\n    display: inline-block;\n    margin-right: 15px;\n    font-weight: bold;\n    margin-bottom: 0;\n}\n\n.customer__table .table__features .table__features__add svg {\n    width: 20px;\n    height: 20px;\n    cursor: pointer;\n}\n\n.customer__table .table__features .table__features__search {\n    display: flex;\n}\n\n.customer__table .table__features .table__features__search__btn {\n    text-align: right;\n    width: calc(100% - 410px - 240px);\n}\n\n.customer__table .table__features .table__features__search__btn button {\n    width: 115px;\n    height: 40px;\n    background-color: #35794a;\n    border-radius: 4px;\n    color: white;\n    font-weight: 500;\n    font-size: 16px;\n    border-style: none;\n    transition: all .5s;\n}\n\n.customer__table .table__features .table__features__search__btn button:hover {\n    background-color: white;\n    color: #35794a;\n    border: 1px solid #35794a;\n}\n\n.customer__table .table__features .table__features__search input {\n    background-color: #F0F5FA;\n    border-radius: 3px;\n    border-style: none;\n    height: 40px;\n    padding-left: 20px;\n    width: 200px;\n}\n\n.customer__table .table__features .table__features__search input:first-child {\n    margin-right: 37px;\n    width: 410px;\n}\n\n.customer__table .ant-table-wrapper {\n    background-color: white;\n    border-bottom-left-radius: 12px;\n    border-bottom-right-radius: 12px;\n    overflow: hidden;\n}\n\n.customer__table ul li.ant-pagination-total-text {\n    position: absolute;\n    right: 30px;\n    margin-right: 0px;\n}\n\n.customer__table .ant-pagination-next:hover button.ant-pagination-item-link,\n.customer__table .ant-pagination-prev:hover .ant-pagination-item-link {\n    color: #459C60;\n    border-color: #459C60;\n}\n\n.customer__table li.ant-pagination-item-active {\n    font-weight: 500;\n    background: #fff;\n    border-color: #459C60;\n}\n\n.customer__table li.ant-pagination-item-active a {\n    color: #459C60;\n}\n\n.customer__table ul li.ant-pagination-options {\n    position: absolute;\n    right: 190px;\n}\n\n.customer__table .ant-select:not(.ant-select-disabled):hover .ant-select-selector {\n    border-color: #459C60;\n}\n\n.customer__table span.anticon svg {\n    color: #459C60;\n}\n\nul.ant-pagination {\n    padding: 0 30px;\n}\n\n.customer__table .customer__table__name {\n    padding-left: 30px;\n    width: 400px;\n}\n\n.customer__table .customer__table__masothue {\n    width: 130px;\n}\n\n.customer__table .customer__table__phone {\n    width: 130px;\n}\n\n.customer__table .customer__table__thaotac {\n    padding-right: 30px;\n    width: 260px;\n}\n\n.customer__table .table__thaotac button {\n    cursor: pointer;\n    border-style: none;\n    border-radius: 4px;\n    width: 92px;\n    height: 32px;\n}\n\n.customer__table .table__thaotac button:first-child {\n    background: #E0FFF1;\n    color: #29B171;\n    margin-right: 22px;\n}\n\n.customer__table .table__thaotac button:nth-child(2) {\n    background: #FFEEF3;\n    ;\n    color: #F1416C;\n}\n\n.customer__table .table__thaotac button[disabled] {\n    background: #F5F8FA;\n    cursor: not-allowed;\n    color: #A1A5B7;\n}\n\n/* Hết CSS customer table */\n/* ---------------------------------------- */\n/* CSS Modal  */\n\n.ant-modal-root .ant-modal-content {\n    border-radius: 10px;\n    overflow: hidden;\n    width: 700px;\n}\n\n.ant-modal-root .ant-modal-header {\n    padding-top: 57px;\n    border-bottom: none;\n}\n\n.ant-modal-root .ant-modal-header .ant-modal-title {\n    font-weight: bold;\n    font-size: 26px;\n    text-align: center;\n}\n\n.ant-modal-root .ant-modal-footer {\n    text-align: center;\n    padding-bottom: 36px;\n    border-top: none;\n}\n\n.contract__service__footer {\n    padding-bottom: 42px;\n}\n\n.ant-modal-root .ant-modal-footer .ant-btn {\n    width: 136.5px;\n    height: 44px;\n    font-size: 18px;\n}\n\n.ant-modal-root .ant-modal-footer .btn__cancel {\n    background: #FFFFFF;\n    border: 1px solid #35794A;\n    border-radius: 3px;\n    color: #35794A;\n}\n\n.ant-modal-root .ant-modal-footer .btn__add {\n    background: #35794A;\n    border: 1px solid #35794A;\n    border-radius: 3px;\n    color: white;\n}\n\n.ant-modal-root .ant-modal-body div.ant-radio-group {\n    text-align: center;\n    display: block;\n}\n\n.ant-modal-root .ant-radio-checked .ant-radio-inner {\n    background: #35794A;\n    border: none;\n}\n\n.ant-modal-root .ant-radio-checked .ant-radio-inner::after {\n    width: 0;\n    height: 0;\n}\n\n.ant-modal-root .ant-radio:hover .ant-radio-inner {\n    border-color: #35794A;\n}\n\n.ant-modal-root .ant-modal-body div.modal__content {\n    text-align: center;\n    margin-top: 25px;\n}\n\n.ant-modal-root .ant-modal-body div.modal__content .modal__field {\n    margin-bottom: 21px;\n}\n\n.ant-modal-root .ant-modal-body div.modal__content .modal__field.field__select {\n    display: flex;\n    padding-left: 63px;\n}\n\n.ant-modal-root .ant-modal-body div.modal__content .modal__field .ant-picker .ant-picker-input {\n    width: 44%;\n}\n\n.ant-modal-root .ant-modal-body div.modal__content .modal__field .ant-picker .ant-picker-clear {\n    top: 36%;\n}\n\n.ant-modal-root .ant-modal-body div.modal__content .modal__field.field__select>div div.ant-select .ant-select-selector {\n    border: none;\n    padding: 0;\n    box-shadow: none;\n    width: 100%;\n}\n\n.ant-modal-root .ant-modal-body div.modal__content .modal__field.field__select>div div.ant-select .ant-select-selector .ant-select-selection-search {\n    width: 100%;\n    left: 0;\n}\n\n.ant-modal-root .ant-modal-body div.modal__content .modal__field.field__select .ant-select-selection-search>input,\n.ant-modal-root .ant-modal-body div.modal__content .modal__field.field__select .ant-select-selection-placeholder {\n    color: #666666;\n\n}\n\n.ant-modal-root .ant-modal-body div.modal__content .modal__field.field__select>div div.ant-select .ant-select-selector {\n    text-align: left;\n}\n\n.ant-modal-root .ant-modal-body div.modal__content .modal__field>input {\n    border: none;\n    border-bottom: 1px solid #CCCCCC;\n    width: 525px;\n    padding: 0 0 9px 9px;\n    outline: none;\n    color: #666666;\n    font-size: 15px;\n}\n\n.ant-modal-root .ant-modal-body div.modal__content .modal__field.two__fields {\n    text-align: left;\n    padding-left: 63px;\n}\n\n.ant-modal-root .ant-modal-body div.modal__content .modal__field.two__fields>input {\n    width: 245px;\n}\n\n.ant-modal-root .ant-modal-body div.modal__content .modal__field.two__fields>input:first-child {\n    margin-right: 35px;\n}\n\n\n\n.ant-modal-root .ant-modal-body div.modal__upload {\n    padding-left: 63px;\n    text-align: left;\n}\n\n.ant-modal-root .ant-modal-body div.modal__upload>span {\n    color: #666666;\n    font-size: 15px;\n}\n\n.ant-modal-root .ant-modal-body div.modal__upload>input {\n    width: 0.1px;\n    height: 0.1px;\n    position: absolute;\n    opacity: 0;\n    z-index: -1;\n\n}\n\n.ant-modal-root .ant-modal-body div.modal__upload label {\n    display: block;\n    width: 110px;\n    height: 110px;\n    text-align: center;\n    border: 1px dashed #CCCCCC;\n    padding-top: 34px;\n    color: #AAAAAA;\n    margin-top: 15px;\n    cursor: pointer;\n}\n\n.ant-modal-root .ant-modal-body div.modal__upload label>svg {\n    width: 16px;\n    height: 18px;\n}\n\n/* Hết CSS Modal */\n/* ------------------------------------ */\n/* CSS Contract Table */\n\ndiv.contract__table .table__features .table__features__search input:first-child {\n    margin-right: 37px;\n    width: 200px;\n}\n\ndiv.contract__table .table__features .table__features__search input:nth-child(2) {\n    margin-right: 37px;\n    width: 410px;\n}\n\ndiv.contract__table .table__features .table__features__search input:nth-child(3) {\n    width: 251px;\n}\n\n.contract__table .contract__table__soHopDong {\n    padding-left: 30px;\n    width: 180px;\n}\n\n.contract__table .contract__table__customerName {\n    width: 350px;\n}\n\n.contract__table td.contract__table__customerName,\n.contract__table td.contract__table__status {\n    font-weight: bold;\n}\n\n.contract__table td.contract__table__status>span[status^=\"đang\"] {\n    color: #F1416C;\n}\n\n.contract__table td.contract__table__status>span[status^=\"kết\"] {\n    color: #29B171;\n}\n\n.contract__table .contract__table__thaotac {\n    padding-right: 30px;\n}\n\n/* Hết CSS Contract table */\n/* ------------------------------------- */\n/* CSS Create Contract */\n\n.create__contract .create__contract__content {\n    background: #FFFFFF;\n    border-radius: 12px;\n}\n\n.create__contract .border_bottom_3px {\n    border-bottom: 3px solid #EEF0F8;\n    ;\n}\n\n.create__contract .create__contract__content .create__contract__header {\n    padding: 20px 0 20px 26px;\n}\n\n.create__contract .create__contract__content .create__contract__header>h2 {\n    font-weight: bold;\n    font-size: 20px;\n    margin-bottom: 0;\n}\n\n.create__contract .create__contract__inforCustomer,\n.create__contract .create__contract__contactInfor,\n.create__contract .create__contract__value,\n.create__contract .create__contract__payment,\n.create__contract .create__contract__term {\n    padding: 23px 0 36px 118px;\n}\n\n.create__contract .create__contract__inforCustomer>p,\n.create__contract .create__contract__contactInfor .display__flex,\n.create__contract .create__contract__value p,\n.create__contract .create__contract__payment .display__flex,\n.create__contract .create__contract__term .display__flex {\n    font-size: 18px;\n    font-weight: bold;\n    margin-bottom: 20px;\n}\n\n.create__contract .create__contract__inforCustomer .field__flex {\n    display: flex;\n}\n\n.create__contract .create__contract__inforCustomer .field__input input,\n.create__contract .create__contract__value .field__input_2 input {\n    width: 430px;\n}\n\n.create__contract .create__contract__inforCustomer .field__input .date__range__picker {\n    width: 430px;\n    margin: 0;\n    border: none;\n    border-bottom: 1px solid #CCCCCC;\n    outline: none;\n    box-shadow: none;\n}\n\n.create__contract .create__contract__inforCustomer .field__input .date__range__picker .ant-picker-input {\n    width: 44%;\n}\n\n.create__contract .create__contract__value .field__input_2 .ant-select {\n    width: 430px;\n}\n\n.create__contract .create__contract__value .field__input_2 .ant-select div.ant-select-selector {\n    border: none;\n    padding: 0;\n    box-shadow: none;\n    width: 100%;\n}\n\n.create__contract .create__contract__value .field__input_2 .ant-select div.ant-select-selector .ant-select-selection-search {\n    width: 100%;\n    left: 0;\n}\n\n.create__contract .create__contract__value .field__input_2 .ant-select div.ant-select-selector .ant-select-selection-search>input,\n.create__contract .create__contract__value .field__input_2 .ant-select div.ant-select-selector .ant-select-selection-placeholder {\n    color: #666666;\n}\n\n.create__contract .create__contract__inforCustomer .field__input>div {\n    width: 432px;\n    display: flex;\n    align-items: center;\n    margin-right: 54px;\n}\n\n.create__contract .create__contract__inforCustomer .field__input>div .ant-select-selection-search input {\n    width: 398px;\n    margin-right: 12px;\n    color: #666666;\n}\n\n.create__contract .create__contract__inforCustomer .field__input>div .ant-select-selection-search input::placeholder {\n    color: #666666;\n}\n\n.margin_right_54 {\n    margin-right: 54px;\n}\n\n.create__contract .create__contract__inforCustomer .field__input {\n    margin-bottom: 14px;\n}\n\n.create__contract .create__contract__inforCustomer .field__input:last-child {\n    margin-bottom: 0;\n}\n\n.create__contract .create__contract__inforCustomer .field__input>div>svg,\n.create__contract svg {\n    cursor: pointer;\n}\n\n.create__contract.content .create__contract__content .create__contract__inforCustomer .field__input>div .ant-select {\n    width: 410px;\n}\n\n.create__contract.content .create__contract__content .create__contract__inforCustomer div.ant-select-selector {\n    border: none;\n    padding: 0;\n    box-shadow: none;\n    width: 100%;\n}\n\n.create__contract.content .create__contract__content .create__contract__inforCustomer div.ant-select-selector .ant-select-selection-search {\n    width: 100%;\n    left: 0;\n}\n\n.create__contract.content .create__contract__content .create__contract__inforCustomer div.ant-select-selector .ant-select-selection-placeholder {\n    color: #666666;\n}\n\n.create__contract .create__contract__inforCustomer .ant-picker:hover,\n.create__contract .create__contract__payment .ant-picker:hover,\n.contract__service .ant-picker:hover {\n    border-color: #CCCCCC;\n}\n\n.create__contract .create__contract__payment .ant-picker-input input,\n.create__contract .create__contract__inforCustomer .ant-picker-input input::placeholder,\n.create__contract .create__contract__payment .ant-picker-input input::placeholder,\n.contract__service .ant-picker-input input::placeholder {\n    color: #666666;\n}\n\n.create__contract .create__contract__contactInfor .display__flex>p,\n.create__contract .create__contract__payment .display__flex>p,\n.create__contract .create__contract__term .display__flex>p {\n    margin-right: 14px;\n}\n\n.create__contract .create__contract__contactInfor .display__flex,\n.create__contract .create__contract__payment .display__flex,\n.create__contract .create__contract__term .display__flex {\n    display: flex;\n    align-items: center;\n}\n\n.create__contract .create__contract__contactInfor .field__input_3 input,\n.create__contract .create__contract__value .field__input_3 input {\n    width: 265px;\n    margin-right: 59.05px;\n}\n\n.field__input_3 input[placeholder$=\"đồng\"]::placeholder {\n    color: #F1416C;\n}\n\n.create__contract .create__contract__contactInfor .field__input_3,\n.create__contract .create__contract__value .field__input_2 {\n    margin-bottom: 14px;\n}\n\n.create__contract .create__contract__contactInfor .field__input_3 input:last-child {\n    margin-right: 0;\n}\n\n.create__contract .create__contract__contactInfor .field__input input {\n    width: 913px;\n}\n\n.create__contract .create__contract__value>textarea {\n    width: 916px;\n    height: 76px;\n    resize: none;\n    border: 1px solid #CCCCCC;\n    border-radius: 5px;\n    margin-top: 33px;\n    padding: 10px 0 0 15px;\n    outline: none;\n}\n\n.create__contract .create__contract__payment .ant-picker {\n    margin-right: 54px;\n}\n\n.create__contract .create__contract__payment .ant-picker,\n.create__contract .create__contract__payment input {\n    width: 262px;\n}\n\n.create__contract .create__contract__payment .ant-picker-focused,\n.contract__service div.ant-picker-focused {\n    box-shadow: none;\n}\n\n.create__contract .create__contract__payment .contract__payment__process .payment__contract {\n    display: flex;\n    justify-content: space-between;\n    width: 916px;\n    border-bottom: 1px solid #EEEFF3;\n    padding: 18px 0;\n}\n\n.create__contract .create__contract__payment .contract__payment__process .payment__contract>span:first-child {\n    font-weight: bold;\n}\n\n.create__contract .create__contract__payment .contract__payment__process .payment__contract>span:last-child {\n    color: #F1416C;\n    font-weight: bold;\n    min-width: 125px;\n    text-align: right;\n}\n\n.create__contract .create__contract__term table {\n    width: 916px;\n}\n\n.create__contract .create__contract__term table th {\n    background-color: white;\n    color: #999999;\n}\n\n.create__contract .create__contract__term table tr:hover>td {\n    background-color: white;\n}\n\n.create__contract .create__contract__term table tr td.price {\n    color: #F1416C;\n}\n\n.create__contract .create__contract__term table .item {\n    width: 150px;\n}\n\n.create__contract .create__contract__term table .content {\n    width: 300px;\n}\n\n.create__contract .create__contract__term table .dateUp {\n    width: 185px;\n}\n\n.create__contract .create__contract__term table .price {\n    min-width: 150px;\n}\n\n.create__contract .create__contract__term table td.item,\n.create__contract .create__contract__term table td.price {\n    font-weight: bold;\n}\n\n.create__contract .create__contract__term table .thaoTac {\n    min-width: 92px;\n}\n\n.create__contract .create__contract__term table .thaoTac>button {\n    background: #FFEEF3;\n    border-radius: 4px;\n    color: #F1416C;\n    width: 92px;\n    height: 32px;\n    cursor: pointer;\n    border: none;\n    transition: all 0.5s;\n}\n\n.create__contract .create__contract__term table .thaoTac>button:hover {\n    border: 1px solid #F1416C;\n    background-color: white;\n    color: #F1416C;\n}\n\n.create__contract .create__contract__footer {\n    padding: 28px 0 28px 0;\n    margin-left: 118px;\n    width: 916px;\n    text-align: right;\n}\n\n.create__contract .create__contract__footer .footer__btn {\n    width: 135px;\n    height: 44px;\n    margin-right: 40px;\n    border-radius: 3px;\n    cursor: pointer;\n}\n\n.create__contract .create__contract__footer .footer__btn.btn__delete {\n    background-color: white;\n    color: #35794A;\n    border: 1px solid #35794A;\n}\n\n.create__contract .create__contract__footer .footer__btn.btn__review {\n    background: #3699FF;\n    border: 1px solid #3699FF;\n    color: white;\n}\n\n.create__contract .create__contract__footer .footer__btn.btn__create {\n    margin-right: 0;\n    background: #35794A;\n    border: 1px solid #35794A;\n    color: white;\n}\n\ndiv.ant-select-dropdown {\n    border: 1px solid #DDDDDD;\n    border-radius: 5px;\n    padding: 0;\n    overflow: hidden;\n}\n\ndiv.ant-select-dropdown div.ant-select-item {\n    border-bottom: 1px solid #DDDDDD;\n    padding-top: 12px;\n    padding-bottom: 12px;\n}\n\n/* Hết CSS create contract */\n/* ----------------------------------------------------- */", "",{"version":3,"sources":["webpack://./src/App.css"],"names":[],"mappings":"AAAA;;;IAGI,sBAAsB;AAC1B;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,mBAAmB;IACnB,yBAAyB;IACzB,WAAW;IACX,gBAAgB;IAChB,kBAAkB;IAClB,oBAAoB;AACxB;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,+LAA+L;AACnM;;AAEA;IACI,YAAY;IACZ,gCAAgC;IAChC,YAAY;IACZ,oBAAoB;IACpB,aAAa;IACb,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,UAAU;IACV,gBAAgB;IAChB,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA,gBAAgB;;AAEhB;IACI,kBAAkB;IAClB,8BAA8B;IAC9B,wBAAwB;IACxB,YAAY;IACZ,oCAAoC;AACxC;;AAEA;IACI,YAAY;IACZ,eAAe;AACnB;;AAEA,mCAAmC;AACnC,YAAY;;AAEZ;IACI,YAAY;IACZ,gBAAgB;IAChB,eAAe;IACf,MAAM;IACN,OAAO;IACP,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,WAAW;IACX,YAAY;IACZ,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;IACT,eAAe;IACf,YAAY;IACZ,iBAAiB;AACrB;;AAEA;IACI,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,qBAAqB;IACrB,kBAAkB;IAClB,SAAS;AACb;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,YAAY;IACZ,eAAe;IACf,gBAAgB;IAChB,qBAAqB;AACzB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,iBAAiB;IACjB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,YAAY;AAChB;;AAEA;;IAEI,YAAY;IACZ,eAAe;IACf,cAAc;AAClB;;AAEA;;IAEI,uBAAuB;AAC3B;;AAEA;;;;;IAKI,YAAY;AAChB;;AAEA;IACI,+BAA+B;AACnC;;AAEA;IACI,cAAc;AAClB;;AAEA,gBAAgB;;AAEhB,eAAe;;AAEf;IACI,eAAe;IACf,MAAM;IACN,WAAW;IACX,yBAAyB;IACzB,mBAAmB;IACnB,uBAAuB;IACvB,WAAW;AACf;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,mBAAmB;IACnB,mBAAmB;IACnB,YAAY;IACZ,gCAAgC;;AAEpC;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,iBAAiB;AACrB;;AAEA,mBAAmB;AACnB,oDAAoD;AACpD,uBAAuB;;AAEvB;IACI,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;IACnB,kBAAkB;IAClB,iBAAiB;IACjB,yBAAyB;AAC7B;;AAEA;IACI,cAAc;IACd,uBAAuB;AAC3B;;AAEA;;IAEI,qBAAqB;IACrB,cAAc;AAClB;;AAEA;IACI,kBAAkB;IAClB,uBAAuB;IACvB,gCAAgC;IAChC,4BAA4B;IAC5B,6BAA6B;IAC7B,gBAAgB;AACpB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,qBAAqB;IACrB,kBAAkB;IAClB,iBAAiB;IACjB,gBAAgB;AACpB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,iBAAiB;IACjB,iCAAiC;AACrC;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,yBAAyB;IACzB,kBAAkB;IAClB,YAAY;IACZ,gBAAgB;IAChB,eAAe;IACf,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,uBAAuB;IACvB,cAAc;IACd,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;IACzB,kBAAkB;IAClB,kBAAkB;IAClB,YAAY;IACZ,kBAAkB;IAClB,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,YAAY;AAChB;;AAEA;IACI,uBAAuB;IACvB,+BAA+B;IAC/B,gCAAgC;IAChC,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,iBAAiB;AACrB;;AAEA;;IAEI,cAAc;IACd,qBAAqB;AACzB;;AAEA;IACI,gBAAgB;IAChB,gBAAgB;IAChB,qBAAqB;AACzB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,kBAAkB;IAClB,YAAY;AAChB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,kBAAkB;IAClB,YAAY;AAChB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,eAAe;IACf,kBAAkB;IAClB,kBAAkB;IAClB,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,mBAAmB;IACnB,cAAc;IACd,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;;IAEnB,cAAc;AAClB;;AAEA;IACI,mBAAmB;IACnB,mBAAmB;IACnB,cAAc;AAClB;;AAEA,2BAA2B;AAC3B,6CAA6C;AAC7C,eAAe;;AAEf;IACI,mBAAmB;IACnB,gBAAgB;IAChB,YAAY;AAChB;;AAEA;IACI,iBAAiB;IACjB,mBAAmB;AACvB;;AAEA;IACI,iBAAiB;IACjB,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,oBAAoB;IACpB,gBAAgB;AACpB;;AAEA;IACI,oBAAoB;AACxB;;AAEA;IACI,cAAc;IACd,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,mBAAmB;IACnB,yBAAyB;IACzB,kBAAkB;IAClB,cAAc;AAClB;;AAEA;IACI,mBAAmB;IACnB,yBAAyB;IACzB,kBAAkB;IAClB,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,cAAc;AAClB;;AAEA;IACI,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,QAAQ;IACR,SAAS;AACb;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,kBAAkB;AACtB;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,QAAQ;AACZ;;AAEA;IACI,YAAY;IACZ,UAAU;IACV,gBAAgB;IAChB,WAAW;AACf;;AAEA;IACI,WAAW;IACX,OAAO;AACX;;AAEA;;IAEI,cAAc;;AAElB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,YAAY;IACZ,gCAAgC;IAChC,YAAY;IACZ,oBAAoB;IACpB,aAAa;IACb,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,kBAAkB;AACtB;;;;AAIA;IACI,kBAAkB;IAClB,gBAAgB;AACpB;;AAEA;IACI,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,kBAAkB;IAClB,UAAU;IACV,WAAW;;AAEf;;AAEA;IACI,cAAc;IACd,YAAY;IACZ,aAAa;IACb,kBAAkB;IAClB,0BAA0B;IAC1B,iBAAiB;IACjB,cAAc;IACd,gBAAgB;IAChB,eAAe;AACnB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA,kBAAkB;AAClB,yCAAyC;AACzC,uBAAuB;;AAEvB;IACI,kBAAkB;IAClB,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,YAAY;AAChB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,YAAY;AAChB;;AAEA;IACI,YAAY;AAChB;;AAEA;;IAEI,iBAAiB;AACrB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,mBAAmB;AACvB;;AAEA,2BAA2B;AAC3B,0CAA0C;AAC1C,wBAAwB;;AAExB;IACI,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA;IACI,gCAAgC;;AAEpC;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,iBAAiB;IACjB,eAAe;IACf,gBAAgB;AACpB;;AAEA;;;;;IAKI,0BAA0B;AAC9B;;AAEA;;;;;IAKI,eAAe;IACf,iBAAiB;IACjB,mBAAmB;AACvB;;AAEA;IACI,aAAa;AACjB;;AAEA;;IAEI,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,SAAS;IACT,YAAY;IACZ,gCAAgC;IAChC,aAAa;IACb,gBAAgB;AACpB;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,UAAU;IACV,gBAAgB;IAChB,WAAW;AACf;;AAEA;IACI,WAAW;IACX,OAAO;AACX;;AAEA;;IAEI,cAAc;AAClB;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,cAAc;AAClB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;;IAEI,eAAe;AACnB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,UAAU;IACV,gBAAgB;IAChB,WAAW;AACf;;AAEA;IACI,WAAW;IACX,OAAO;AACX;;AAEA;IACI,cAAc;AAClB;;AAEA;;;IAGI,qBAAqB;AACzB;;AAEA;;;;IAII,cAAc;AAClB;;AAEA;;;IAGI,kBAAkB;AACtB;;AAEA;;;IAGI,aAAa;IACb,mBAAmB;AACvB;;AAEA;;IAEI,YAAY;IACZ,qBAAqB;AACzB;;AAEA;IACI,cAAc;AAClB;;AAEA;;IAEI,mBAAmB;AACvB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,yBAAyB;IACzB,kBAAkB;IAClB,gBAAgB;IAChB,sBAAsB;IACtB,aAAa;AACjB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;;IAEI,YAAY;AAChB;;AAEA;;IAEI,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,YAAY;IACZ,gCAAgC;IAChC,eAAe;AACnB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,cAAc;IACd,iBAAiB;IACjB,gBAAgB;IAChB,iBAAiB;AACrB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,uBAAuB;IACvB,cAAc;AAClB;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;;IAEI,iBAAiB;AACrB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,mBAAmB;IACnB,kBAAkB;IAClB,cAAc;IACd,WAAW;IACX,YAAY;IACZ,eAAe;IACf,YAAY;IACZ,oBAAoB;AACxB;;AAEA;IACI,yBAAyB;IACzB,uBAAuB;IACvB,cAAc;AAClB;;AAEA;IACI,sBAAsB;IACtB,kBAAkB;IAClB,YAAY;IACZ,iBAAiB;AACrB;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,kBAAkB;IAClB,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,uBAAuB;IACvB,cAAc;IACd,yBAAyB;AAC7B;;AAEA;IACI,mBAAmB;IACnB,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,eAAe;IACf,mBAAmB;IACnB,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,yBAAyB;IACzB,kBAAkB;IAClB,UAAU;IACV,gBAAgB;AACpB;;AAEA;IACI,gCAAgC;IAChC,iBAAiB;IACjB,oBAAoB;AACxB;;AAEA,4BAA4B;AAC5B,0DAA0D","sourcesContent":["*,\n:after,\n:before {\n    box-sizing: border-box;\n}\n\n#root {\n    width: 100%;\n    height: 100%;\n}\n\ndiv.App {\n    /* display: flex; */\n    background-color: #eef0f8;\n    width: 100%;\n    min-height: 100%;\n    position: relative;\n    padding-bottom: 35px;\n}\n\n.App p {\n    margin: 0;\n}\n\nbody {\n    font-family: -apple-system, BlinkMacSystemFont, segoe ui, Roboto, helvetica neue, Arial, noto sans, sans-serif, apple color emoji, segoe ui emoji, segoe ui symbol, noto color emoji !important;\n}\n\n.style {\n    border: none;\n    border-bottom: 1px solid #CCCCCC;\n    width: 525px;\n    padding: 0 0 9px 9px;\n    outline: none;\n    color: #666666;\n    font-size: 15px;\n}\n\n.style::placeholder {\n    color: #666666;\n}\n\np.required__field {\n    color: red;\n    margin-bottom: 0;\n    text-align: left;\n    padding-left: 63px;\n}\n\n/* loading css */\n\n.loading {\n    position: absolute;\n    height: -webkit-fill-available;\n    width: calc(100% - 80px);\n    z-index: 100;\n    background: rgba(255, 255, 255, 0.8);\n}\n\n.loading>svg {\n    height: 100%;\n    font-size: 70px;\n}\n\n/* ------ Hêt loading ----------- */\n/* sidebar */\n\n.sidebar {\n    width: 265px;\n    min-height: 100%;\n    position: fixed;\n    top: 0;\n    left: 0;\n    background-color: #459C60;\n}\n\n.sidebar .bg_pri_blue {\n    background-color: #35794a;\n}\n\n.sidebar .sidebar__logo {\n    display: flex;\n    width: 100%;\n    height: 65px;\n    justify-content: center;\n    align-items: center;\n}\n\n.sidebar .sidebar__personal__information {\n    width: 100%;\n    padding: 14px 0 14px 23px;\n}\n\n.sidebar .sidebar__personal__information p {\n    display: flex;\n    align-items: center;\n    margin: 0;\n    font-size: 16px;\n    color: white;\n    font-weight: bold;\n}\n\n.sidebar .sidebar__personal__information svg {\n    font-size: 20px;\n    margin-right: 10px;\n}\n\n.sidebar .sidebar__sub__menu {\n    padding: 10px 0;\n}\n\n.sidebar .sidebar__sub__menu ul {\n    list-style-type: none;\n    padding-left: 53px;\n    margin: 0;\n}\n\n.sidebar .sidebar__sub__menu ul li {\n    padding: 7px 0;\n}\n\n.sidebar .sidebar__sub__menu ul li a {\n    color: white;\n    font-size: 16px;\n    font-weight: 400;\n    text-decoration: none;\n}\n\n.sidebar_SubMenu__XZeb6 ul.ant-menu {\n    background-color: #35794a;\n}\n\n.sidebar_SubMenu__XZeb6 ul li.ant-menu-submenu div svg {\n    color: white;\n    width: 20px;\n    height: 20px;\n    margin-right: 10px;\n}\n\n.sidebar_SubMenu__XZeb6 .ant-menu-inline.ant-menu-root .ant-menu-submenu-title>.ant-menu-title-content {\n    font-weight: bold;\n    color: white;\n    font-size: 16px;\n}\n\n.sidebar_SubMenu__XZeb6 .ant-menu-submenu-arrow {\n    color: white;\n}\n\n.sidebar_SubMenu__XZeb6 ul.ant-menu li.ant-menu-item {\n    align-items: center;\n    transition: all .3s;\n}\n\n.sidebar_SubMenu__XZeb6 ul.ant-menu li.ant-menu-item>svg {\n    width: 20px;\n    height: 20px;\n    color: white;\n}\n\n.sidebar_SubMenu__XZeb6 .ant-menu-inline.ant-menu-root .ant-menu-submenu-title>.ant-menu-title-content,\n.sidebar_SubMenu__XZeb6 .ant-menu-inline.ant-menu-root .ant-menu-item>.ant-menu-title-content {\n    color: white;\n    font-size: 16px;\n    margin-left: 0;\n}\n\n.sidebar_SubMenu__XZeb6 .ant-menu-light .ant-menu-item-active,\n.sidebar_SubMenu__XZeb6 .ant-menu-light .ant-menu-item:hover {\n    background-color: white;\n}\n\n.sidebar_SubMenu__XZeb6 ul li.ant-menu-submenu ul.ant-menu .ant-menu-item-active span.ant-menu-title-content,\n.sidebar_SubMenu__XZeb6 ul li.ant-menu-submenu ul.ant-menu .ant-menu-item-selected svg,\n.sidebar_SubMenu__XZeb6 ul li.ant-menu-submenu ul.ant-menu .ant-menu-item:hover span.ant-menu-title-content,\n.sidebar_SubMenu__XZeb6 ul li.ant-menu-submenu ul.ant-menu .ant-menu-item:hover svg,\n.sidebar_SubMenu__XZeb6 ul li.ant-menu-submenu ul.ant-menu .ant-menu-item-selected span.ant-menu-title-content {\n    color: black;\n}\n\n.sidebar_SubMenu__XZeb6 .ant-menu-inline .ant-menu-item:after {\n    border-right: 3px solid #35796C;\n}\n\n.sidebar_SubMenu__XZeb6 .ant-menu-submenu:hover>.ant-menu-submenu-title>.ant-menu-submenu-arrow {\n    color: #8bc34a;\n}\n\n/* hết sidebar */\n\n/* CSS Header */\n\n.header {\n    position: fixed;\n    top: 0;\n    left: 265px;\n    width: calc(100% - 265px);\n    height: fit-content;\n    background-color: white;\n    z-index: 10;\n}\n\n.header .header__infor {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    padding-right: 28px;\n    height: 65px;\n    border-bottom: 1px solid #EEEFF3;\n    ;\n}\n\n.header .header__infor .header__avtar {\n    width: 36px;\n    height: 36px;\n    overflow: hidden;\n    margin-right: 17px;\n    border-radius: 50%;\n}\n\n.header .header__infor .header__avtar img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n}\n\n.header .header__infor p {\n    margin-right: 21px;\n}\n\n.header .header__infor svg {\n    cursor: pointer;\n}\n\n.header .header__infor p span {\n    font-weight: bold;\n}\n\n.header .header__beadrum {\n    height: 54px;\n    padding-left: 36px;\n}\n\n.header .header__beadrum nav {\n    line-height: 54px;\n}\n\n/* Hết CSS Header */\n/* ----------------------------------------------- */\n/* CSS customer table */\n\n.customer__table {\n    position: relative;\n}\n\n.App>div.content {\n    height: fit-content;\n    margin-left: 265px;\n    margin-top: 119px;\n    padding: 35px 40px 0 40px;\n}\n\n.customer__table table thead tr th {\n    color: #A1A5B7;\n    background-color: white;\n}\n\n.customer__table .ant-table-wrapper ul li.ant-pagination-item:hover,\n.customer__table .ant-table-wrapper ul li.ant-pagination-item:hover a {\n    border-color: #459C60;\n    color: #459C60;\n}\n\n.customer__table .table__features {\n    padding: 17px 30px;\n    background-color: white;\n    border-bottom: 1px solid #EEEFF3;\n    border-top-left-radius: 12px;\n    border-top-right-radius: 12px;\n    overflow: hidden;\n}\n\n.customer__table .table__features .table__features__add {\n    margin-bottom: 13px;\n}\n\n.customer__table .table__features .table__features__add h1 {\n    display: inline-block;\n    margin-right: 15px;\n    font-weight: bold;\n    margin-bottom: 0;\n}\n\n.customer__table .table__features .table__features__add svg {\n    width: 20px;\n    height: 20px;\n    cursor: pointer;\n}\n\n.customer__table .table__features .table__features__search {\n    display: flex;\n}\n\n.customer__table .table__features .table__features__search__btn {\n    text-align: right;\n    width: calc(100% - 410px - 240px);\n}\n\n.customer__table .table__features .table__features__search__btn button {\n    width: 115px;\n    height: 40px;\n    background-color: #35794a;\n    border-radius: 4px;\n    color: white;\n    font-weight: 500;\n    font-size: 16px;\n    border-style: none;\n    transition: all .5s;\n}\n\n.customer__table .table__features .table__features__search__btn button:hover {\n    background-color: white;\n    color: #35794a;\n    border: 1px solid #35794a;\n}\n\n.customer__table .table__features .table__features__search input {\n    background-color: #F0F5FA;\n    border-radius: 3px;\n    border-style: none;\n    height: 40px;\n    padding-left: 20px;\n    width: 200px;\n}\n\n.customer__table .table__features .table__features__search input:first-child {\n    margin-right: 37px;\n    width: 410px;\n}\n\n.customer__table .ant-table-wrapper {\n    background-color: white;\n    border-bottom-left-radius: 12px;\n    border-bottom-right-radius: 12px;\n    overflow: hidden;\n}\n\n.customer__table ul li.ant-pagination-total-text {\n    position: absolute;\n    right: 30px;\n    margin-right: 0px;\n}\n\n.customer__table .ant-pagination-next:hover button.ant-pagination-item-link,\n.customer__table .ant-pagination-prev:hover .ant-pagination-item-link {\n    color: #459C60;\n    border-color: #459C60;\n}\n\n.customer__table li.ant-pagination-item-active {\n    font-weight: 500;\n    background: #fff;\n    border-color: #459C60;\n}\n\n.customer__table li.ant-pagination-item-active a {\n    color: #459C60;\n}\n\n.customer__table ul li.ant-pagination-options {\n    position: absolute;\n    right: 190px;\n}\n\n.customer__table .ant-select:not(.ant-select-disabled):hover .ant-select-selector {\n    border-color: #459C60;\n}\n\n.customer__table span.anticon svg {\n    color: #459C60;\n}\n\nul.ant-pagination {\n    padding: 0 30px;\n}\n\n.customer__table .customer__table__name {\n    padding-left: 30px;\n    width: 400px;\n}\n\n.customer__table .customer__table__masothue {\n    width: 130px;\n}\n\n.customer__table .customer__table__phone {\n    width: 130px;\n}\n\n.customer__table .customer__table__thaotac {\n    padding-right: 30px;\n    width: 260px;\n}\n\n.customer__table .table__thaotac button {\n    cursor: pointer;\n    border-style: none;\n    border-radius: 4px;\n    width: 92px;\n    height: 32px;\n}\n\n.customer__table .table__thaotac button:first-child {\n    background: #E0FFF1;\n    color: #29B171;\n    margin-right: 22px;\n}\n\n.customer__table .table__thaotac button:nth-child(2) {\n    background: #FFEEF3;\n    ;\n    color: #F1416C;\n}\n\n.customer__table .table__thaotac button[disabled] {\n    background: #F5F8FA;\n    cursor: not-allowed;\n    color: #A1A5B7;\n}\n\n/* Hết CSS customer table */\n/* ---------------------------------------- */\n/* CSS Modal  */\n\n.ant-modal-root .ant-modal-content {\n    border-radius: 10px;\n    overflow: hidden;\n    width: 700px;\n}\n\n.ant-modal-root .ant-modal-header {\n    padding-top: 57px;\n    border-bottom: none;\n}\n\n.ant-modal-root .ant-modal-header .ant-modal-title {\n    font-weight: bold;\n    font-size: 26px;\n    text-align: center;\n}\n\n.ant-modal-root .ant-modal-footer {\n    text-align: center;\n    padding-bottom: 36px;\n    border-top: none;\n}\n\n.contract__service__footer {\n    padding-bottom: 42px;\n}\n\n.ant-modal-root .ant-modal-footer .ant-btn {\n    width: 136.5px;\n    height: 44px;\n    font-size: 18px;\n}\n\n.ant-modal-root .ant-modal-footer .btn__cancel {\n    background: #FFFFFF;\n    border: 1px solid #35794A;\n    border-radius: 3px;\n    color: #35794A;\n}\n\n.ant-modal-root .ant-modal-footer .btn__add {\n    background: #35794A;\n    border: 1px solid #35794A;\n    border-radius: 3px;\n    color: white;\n}\n\n.ant-modal-root .ant-modal-body div.ant-radio-group {\n    text-align: center;\n    display: block;\n}\n\n.ant-modal-root .ant-radio-checked .ant-radio-inner {\n    background: #35794A;\n    border: none;\n}\n\n.ant-modal-root .ant-radio-checked .ant-radio-inner::after {\n    width: 0;\n    height: 0;\n}\n\n.ant-modal-root .ant-radio:hover .ant-radio-inner {\n    border-color: #35794A;\n}\n\n.ant-modal-root .ant-modal-body div.modal__content {\n    text-align: center;\n    margin-top: 25px;\n}\n\n.ant-modal-root .ant-modal-body div.modal__content .modal__field {\n    margin-bottom: 21px;\n}\n\n.ant-modal-root .ant-modal-body div.modal__content .modal__field.field__select {\n    display: flex;\n    padding-left: 63px;\n}\n\n.ant-modal-root .ant-modal-body div.modal__content .modal__field .ant-picker .ant-picker-input {\n    width: 44%;\n}\n\n.ant-modal-root .ant-modal-body div.modal__content .modal__field .ant-picker .ant-picker-clear {\n    top: 36%;\n}\n\n.ant-modal-root .ant-modal-body div.modal__content .modal__field.field__select>div div.ant-select .ant-select-selector {\n    border: none;\n    padding: 0;\n    box-shadow: none;\n    width: 100%;\n}\n\n.ant-modal-root .ant-modal-body div.modal__content .modal__field.field__select>div div.ant-select .ant-select-selector .ant-select-selection-search {\n    width: 100%;\n    left: 0;\n}\n\n.ant-modal-root .ant-modal-body div.modal__content .modal__field.field__select .ant-select-selection-search>input,\n.ant-modal-root .ant-modal-body div.modal__content .modal__field.field__select .ant-select-selection-placeholder {\n    color: #666666;\n\n}\n\n.ant-modal-root .ant-modal-body div.modal__content .modal__field.field__select>div div.ant-select .ant-select-selector {\n    text-align: left;\n}\n\n.ant-modal-root .ant-modal-body div.modal__content .modal__field>input {\n    border: none;\n    border-bottom: 1px solid #CCCCCC;\n    width: 525px;\n    padding: 0 0 9px 9px;\n    outline: none;\n    color: #666666;\n    font-size: 15px;\n}\n\n.ant-modal-root .ant-modal-body div.modal__content .modal__field.two__fields {\n    text-align: left;\n    padding-left: 63px;\n}\n\n.ant-modal-root .ant-modal-body div.modal__content .modal__field.two__fields>input {\n    width: 245px;\n}\n\n.ant-modal-root .ant-modal-body div.modal__content .modal__field.two__fields>input:first-child {\n    margin-right: 35px;\n}\n\n\n\n.ant-modal-root .ant-modal-body div.modal__upload {\n    padding-left: 63px;\n    text-align: left;\n}\n\n.ant-modal-root .ant-modal-body div.modal__upload>span {\n    color: #666666;\n    font-size: 15px;\n}\n\n.ant-modal-root .ant-modal-body div.modal__upload>input {\n    width: 0.1px;\n    height: 0.1px;\n    position: absolute;\n    opacity: 0;\n    z-index: -1;\n\n}\n\n.ant-modal-root .ant-modal-body div.modal__upload label {\n    display: block;\n    width: 110px;\n    height: 110px;\n    text-align: center;\n    border: 1px dashed #CCCCCC;\n    padding-top: 34px;\n    color: #AAAAAA;\n    margin-top: 15px;\n    cursor: pointer;\n}\n\n.ant-modal-root .ant-modal-body div.modal__upload label>svg {\n    width: 16px;\n    height: 18px;\n}\n\n/* Hết CSS Modal */\n/* ------------------------------------ */\n/* CSS Contract Table */\n\ndiv.contract__table .table__features .table__features__search input:first-child {\n    margin-right: 37px;\n    width: 200px;\n}\n\ndiv.contract__table .table__features .table__features__search input:nth-child(2) {\n    margin-right: 37px;\n    width: 410px;\n}\n\ndiv.contract__table .table__features .table__features__search input:nth-child(3) {\n    width: 251px;\n}\n\n.contract__table .contract__table__soHopDong {\n    padding-left: 30px;\n    width: 180px;\n}\n\n.contract__table .contract__table__customerName {\n    width: 350px;\n}\n\n.contract__table td.contract__table__customerName,\n.contract__table td.contract__table__status {\n    font-weight: bold;\n}\n\n.contract__table td.contract__table__status>span[status^=\"đang\"] {\n    color: #F1416C;\n}\n\n.contract__table td.contract__table__status>span[status^=\"kết\"] {\n    color: #29B171;\n}\n\n.contract__table .contract__table__thaotac {\n    padding-right: 30px;\n}\n\n/* Hết CSS Contract table */\n/* ------------------------------------- */\n/* CSS Create Contract */\n\n.create__contract .create__contract__content {\n    background: #FFFFFF;\n    border-radius: 12px;\n}\n\n.create__contract .border_bottom_3px {\n    border-bottom: 3px solid #EEF0F8;\n    ;\n}\n\n.create__contract .create__contract__content .create__contract__header {\n    padding: 20px 0 20px 26px;\n}\n\n.create__contract .create__contract__content .create__contract__header>h2 {\n    font-weight: bold;\n    font-size: 20px;\n    margin-bottom: 0;\n}\n\n.create__contract .create__contract__inforCustomer,\n.create__contract .create__contract__contactInfor,\n.create__contract .create__contract__value,\n.create__contract .create__contract__payment,\n.create__contract .create__contract__term {\n    padding: 23px 0 36px 118px;\n}\n\n.create__contract .create__contract__inforCustomer>p,\n.create__contract .create__contract__contactInfor .display__flex,\n.create__contract .create__contract__value p,\n.create__contract .create__contract__payment .display__flex,\n.create__contract .create__contract__term .display__flex {\n    font-size: 18px;\n    font-weight: bold;\n    margin-bottom: 20px;\n}\n\n.create__contract .create__contract__inforCustomer .field__flex {\n    display: flex;\n}\n\n.create__contract .create__contract__inforCustomer .field__input input,\n.create__contract .create__contract__value .field__input_2 input {\n    width: 430px;\n}\n\n.create__contract .create__contract__inforCustomer .field__input .date__range__picker {\n    width: 430px;\n    margin: 0;\n    border: none;\n    border-bottom: 1px solid #CCCCCC;\n    outline: none;\n    box-shadow: none;\n}\n\n.create__contract .create__contract__inforCustomer .field__input .date__range__picker .ant-picker-input {\n    width: 44%;\n}\n\n.create__contract .create__contract__value .field__input_2 .ant-select {\n    width: 430px;\n}\n\n.create__contract .create__contract__value .field__input_2 .ant-select div.ant-select-selector {\n    border: none;\n    padding: 0;\n    box-shadow: none;\n    width: 100%;\n}\n\n.create__contract .create__contract__value .field__input_2 .ant-select div.ant-select-selector .ant-select-selection-search {\n    width: 100%;\n    left: 0;\n}\n\n.create__contract .create__contract__value .field__input_2 .ant-select div.ant-select-selector .ant-select-selection-search>input,\n.create__contract .create__contract__value .field__input_2 .ant-select div.ant-select-selector .ant-select-selection-placeholder {\n    color: #666666;\n}\n\n.create__contract .create__contract__inforCustomer .field__input>div {\n    width: 432px;\n    display: flex;\n    align-items: center;\n    margin-right: 54px;\n}\n\n.create__contract .create__contract__inforCustomer .field__input>div .ant-select-selection-search input {\n    width: 398px;\n    margin-right: 12px;\n    color: #666666;\n}\n\n.create__contract .create__contract__inforCustomer .field__input>div .ant-select-selection-search input::placeholder {\n    color: #666666;\n}\n\n.margin_right_54 {\n    margin-right: 54px;\n}\n\n.create__contract .create__contract__inforCustomer .field__input {\n    margin-bottom: 14px;\n}\n\n.create__contract .create__contract__inforCustomer .field__input:last-child {\n    margin-bottom: 0;\n}\n\n.create__contract .create__contract__inforCustomer .field__input>div>svg,\n.create__contract svg {\n    cursor: pointer;\n}\n\n.create__contract.content .create__contract__content .create__contract__inforCustomer .field__input>div .ant-select {\n    width: 410px;\n}\n\n.create__contract.content .create__contract__content .create__contract__inforCustomer div.ant-select-selector {\n    border: none;\n    padding: 0;\n    box-shadow: none;\n    width: 100%;\n}\n\n.create__contract.content .create__contract__content .create__contract__inforCustomer div.ant-select-selector .ant-select-selection-search {\n    width: 100%;\n    left: 0;\n}\n\n.create__contract.content .create__contract__content .create__contract__inforCustomer div.ant-select-selector .ant-select-selection-placeholder {\n    color: #666666;\n}\n\n.create__contract .create__contract__inforCustomer .ant-picker:hover,\n.create__contract .create__contract__payment .ant-picker:hover,\n.contract__service .ant-picker:hover {\n    border-color: #CCCCCC;\n}\n\n.create__contract .create__contract__payment .ant-picker-input input,\n.create__contract .create__contract__inforCustomer .ant-picker-input input::placeholder,\n.create__contract .create__contract__payment .ant-picker-input input::placeholder,\n.contract__service .ant-picker-input input::placeholder {\n    color: #666666;\n}\n\n.create__contract .create__contract__contactInfor .display__flex>p,\n.create__contract .create__contract__payment .display__flex>p,\n.create__contract .create__contract__term .display__flex>p {\n    margin-right: 14px;\n}\n\n.create__contract .create__contract__contactInfor .display__flex,\n.create__contract .create__contract__payment .display__flex,\n.create__contract .create__contract__term .display__flex {\n    display: flex;\n    align-items: center;\n}\n\n.create__contract .create__contract__contactInfor .field__input_3 input,\n.create__contract .create__contract__value .field__input_3 input {\n    width: 265px;\n    margin-right: 59.05px;\n}\n\n.field__input_3 input[placeholder$=\"đồng\"]::placeholder {\n    color: #F1416C;\n}\n\n.create__contract .create__contract__contactInfor .field__input_3,\n.create__contract .create__contract__value .field__input_2 {\n    margin-bottom: 14px;\n}\n\n.create__contract .create__contract__contactInfor .field__input_3 input:last-child {\n    margin-right: 0;\n}\n\n.create__contract .create__contract__contactInfor .field__input input {\n    width: 913px;\n}\n\n.create__contract .create__contract__value>textarea {\n    width: 916px;\n    height: 76px;\n    resize: none;\n    border: 1px solid #CCCCCC;\n    border-radius: 5px;\n    margin-top: 33px;\n    padding: 10px 0 0 15px;\n    outline: none;\n}\n\n.create__contract .create__contract__payment .ant-picker {\n    margin-right: 54px;\n}\n\n.create__contract .create__contract__payment .ant-picker,\n.create__contract .create__contract__payment input {\n    width: 262px;\n}\n\n.create__contract .create__contract__payment .ant-picker-focused,\n.contract__service div.ant-picker-focused {\n    box-shadow: none;\n}\n\n.create__contract .create__contract__payment .contract__payment__process .payment__contract {\n    display: flex;\n    justify-content: space-between;\n    width: 916px;\n    border-bottom: 1px solid #EEEFF3;\n    padding: 18px 0;\n}\n\n.create__contract .create__contract__payment .contract__payment__process .payment__contract>span:first-child {\n    font-weight: bold;\n}\n\n.create__contract .create__contract__payment .contract__payment__process .payment__contract>span:last-child {\n    color: #F1416C;\n    font-weight: bold;\n    min-width: 125px;\n    text-align: right;\n}\n\n.create__contract .create__contract__term table {\n    width: 916px;\n}\n\n.create__contract .create__contract__term table th {\n    background-color: white;\n    color: #999999;\n}\n\n.create__contract .create__contract__term table tr:hover>td {\n    background-color: white;\n}\n\n.create__contract .create__contract__term table tr td.price {\n    color: #F1416C;\n}\n\n.create__contract .create__contract__term table .item {\n    width: 150px;\n}\n\n.create__contract .create__contract__term table .content {\n    width: 300px;\n}\n\n.create__contract .create__contract__term table .dateUp {\n    width: 185px;\n}\n\n.create__contract .create__contract__term table .price {\n    min-width: 150px;\n}\n\n.create__contract .create__contract__term table td.item,\n.create__contract .create__contract__term table td.price {\n    font-weight: bold;\n}\n\n.create__contract .create__contract__term table .thaoTac {\n    min-width: 92px;\n}\n\n.create__contract .create__contract__term table .thaoTac>button {\n    background: #FFEEF3;\n    border-radius: 4px;\n    color: #F1416C;\n    width: 92px;\n    height: 32px;\n    cursor: pointer;\n    border: none;\n    transition: all 0.5s;\n}\n\n.create__contract .create__contract__term table .thaoTac>button:hover {\n    border: 1px solid #F1416C;\n    background-color: white;\n    color: #F1416C;\n}\n\n.create__contract .create__contract__footer {\n    padding: 28px 0 28px 0;\n    margin-left: 118px;\n    width: 916px;\n    text-align: right;\n}\n\n.create__contract .create__contract__footer .footer__btn {\n    width: 135px;\n    height: 44px;\n    margin-right: 40px;\n    border-radius: 3px;\n    cursor: pointer;\n}\n\n.create__contract .create__contract__footer .footer__btn.btn__delete {\n    background-color: white;\n    color: #35794A;\n    border: 1px solid #35794A;\n}\n\n.create__contract .create__contract__footer .footer__btn.btn__review {\n    background: #3699FF;\n    border: 1px solid #3699FF;\n    color: white;\n}\n\n.create__contract .create__contract__footer .footer__btn.btn__create {\n    margin-right: 0;\n    background: #35794A;\n    border: 1px solid #35794A;\n    color: white;\n}\n\ndiv.ant-select-dropdown {\n    border: 1px solid #DDDDDD;\n    border-radius: 5px;\n    padding: 0;\n    overflow: hidden;\n}\n\ndiv.ant-select-dropdown div.ant-select-item {\n    border-bottom: 1px solid #DDDDDD;\n    padding-top: 12px;\n    padding-bottom: 12px;\n}\n\n/* Hết CSS create contract */\n/* ----------------------------------------------------- */"],"sourceRoot":""}]);
// Exports
/* harmony default export */ __webpack_exports__["default"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./src/App.css":
/*!*********************!*\
  !*** ./src/App.css ***!
  \*********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _node_modules_css_loader_dist_cjs_js_App_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!./App.css */ "./node_modules/css-loader/dist/cjs.js!./src/App.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_App_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ __webpack_exports__["default"] = (_node_modules_css_loader_dist_cjs_js_App_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _node_modules_css_loader_dist_cjs_js_App_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _node_modules_css_loader_dist_cjs_js_App_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,